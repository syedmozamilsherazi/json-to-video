{"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;AAiBM,MAAM,0DAAqB,CAAA,GAAA,0BAAY,EAAyD;AAEvG,SAAS,kCAA8B,KAA0B,EAAE,GAAmC;IACpG,CAAC,OAAO,IAAI,GAAG,CAAA,GAAA,yCAAc,EAAE,OAAO,KAAK;IAC3C,IAAI,UAAC,MAAM,cAAE,UAAU,EAAC,GAAG,CAAA,GAAA,uCAAY,EAAE;IAEzC,8FAA8F;IAC9F,qBACE,sHACG,sBACD,0DAAC;QAAiB,OAAO;QAAO,YAAY;QAAY,gBAAgB;;AAG9E;AAQA,SAAS,uCAAmC,SAAC,KAAK,cAAE,UAAU,EAAE,gBAAgB,GAAG,EAA2B;QAO7F;IANf,qBACE,0DAAC;QACC,KAAK;QACJ,GAAG,CAAA,GAAA,oCAAa,EAAE,OAAO;YAAC,WAAW;QAAI,EAAE;QAC5C,MAAM,MAAM,IAAI,IAAI;QACpB,OAAO,MAAM,KAAK;QAClB,WAAW,CAAA,mBAAA,MAAM,SAAS,cAAf,8BAAA,mBAAmB;OAC7B;WAAI;KAAW,CAAC,GAAG,CAAC,CAAC,MAAM,kBAC1B,0DAAC;YACC,KAAK,KAAK,GAAG;YACb,MAAM;YACN,WAAW,MAAM,WAAW,IAAI,GAAG;YACnC,YAAY,MAAM,UAAU;YAC5B,UAAU,MAAM,QAAQ;;AAIlC;AAEA;;CAEC,GACD,MAAM,2CAA6B,AAAd,WAAW,GAAI,CAAA,GAAA,uBAAS,EAAqB;AAUlE,SAAS,iCAAW,KAAsB,EAAE,GAAgC;IAC1E,OAAO,CAAA,GAAA,8CAAmB,EAAE,QAAQ,OAAO,KAAK,MAAM,QAAQ;AAChE;AAEA;;CAEC,GACD,MAAM,4CAA4B,AAAd,WAAW,GAAI,CAAA,GAAA,uBAAS,EAAqB;AAUjE,SAAS,qCAAe,QAAC,IAAI,aAAE,SAAS,cAAE,UAAU,YAAE,QAAQ,EAAsB;IAClF,sGAAsG;IACtG,IAAI,YAAY;QACd,gBAAgB,YAAY,SAAS;QACrC,YAAY,cAAc;QAC1B,SAAS,IAAM,qBAAA,+BAAA,SAAW,KAAK,GAAG;IACpC;QAOe;IALf,qBACE,0DAAC;QACE,GAAG,CAAA,GAAA,oCAAa,EAAE,KAAK,KAAK,CAAC;QAC9B,KAAK,KAAK,KAAK,CAAC,GAAG;QACnB,OAAO,KAAK,KAAK,CAAC,KAAK;QACvB,WAAW,CAAA,wBAAA,KAAK,KAAK,CAAC,SAAS,cAApB,mCAAA,wBAAwB;qBACnC,0DAAC,CAAA,GAAA,qCAAU,EAAE,QAAQ;QAAC,OAAO;OAC1B,KAAK,QAAQ;AAItB","sources":["packages/react-aria-components/src/Breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {AriaBreadcrumbsProps} from 'react-aria';\nimport {Collection, Node} from 'react-stately';\nimport {CollectionProps, useCollection, useSSRCollectionNode} from './Collection';\nimport {ContextValue, forwardRefType, SlotProps, StyleProps, useContextProps} from './utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {Key} from '@react-types/shared';\nimport {LinkContext} from './Link';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactNode, RefObject} from 'react';\n\nexport interface BreadcrumbsProps<T> extends Omit<CollectionProps<T>, 'disabledKeys'>, AriaBreadcrumbsProps, StyleProps, SlotProps {\n  /** Whether the breadcrumbs are disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a breadcrumb is clicked. */\n  onAction?: (key: Key) => void\n}\n\nexport const BreadcrumbsContext = createContext<ContextValue<BreadcrumbsProps<any>, HTMLOListElement>>(null);\n\nfunction Breadcrumbs<T extends object>(props: BreadcrumbsProps<T>, ref: ForwardedRef<HTMLOListElement>) {\n  [props, ref] = useContextProps(props, ref, BreadcrumbsContext);\n  let {portal, collection} = useCollection(props);\n\n  // Render the portal first so that we have the collection by the time we render the DOM in SSR\n  return (\n    <>\n      {portal}\n      <BreadcrumbsInner props={props} collection={collection} breadcrumbsRef={ref} />\n    </>\n  );\n}\n\ninterface BreadcrumbsInnerProps<T> {\n  props: BreadcrumbsProps<T>,\n  collection: Collection<Node<T>>,\n  breadcrumbsRef: RefObject<HTMLOListElement>\n}\n\nfunction BreadcrumbsInner<T extends object>({props, collection, breadcrumbsRef: ref}: BreadcrumbsInnerProps<T>) {\n  return (\n    <ol\n      ref={ref}\n      {...filterDOMProps(props, {labelable: true})}\n      slot={props.slot || undefined}\n      style={props.style}\n      className={props.className ?? 'react-aria-Breadcrumbs'}>\n      {[...collection].map((node, i) => (\n        <BreadcrumbItem\n          key={node.key}\n          node={node}\n          isCurrent={i === collection.size - 1}\n          isDisabled={props.isDisabled}\n          onAction={props.onAction} />\n      ))}\n    </ol>\n  );\n}\n\n/**\n * Breadcrumbs display a hierarchy of links to the current page or resource in an application.\n */\nconst _Breadcrumbs = /*#__PURE__*/ (forwardRef as forwardRefType)(Breadcrumbs);\nexport {_Breadcrumbs as Breadcrumbs};\n\nexport interface BreadcrumbProps extends StyleProps {\n  /** A unique id for the breadcrumb, which will be passed to `onAction` when the breadcrumb is pressed. */\n  id?: Key,\n  /** The children of the breadcrumb, typically a `<Link>`. */\n  children: ReactNode\n}\n\nfunction Breadcrumb(props: BreadcrumbProps, ref: ForwardedRef<HTMLLIElement>): JSX.Element | null {\n  return useSSRCollectionNode('item', props, ref, props.children);\n}\n\n/**\n * A Breadcrumb represents an individual item in a `<Breadcrumbs>` list.\n */\nconst _Breadcrumb = /*#__PURE__*/ (forwardRef as forwardRefType)(Breadcrumb);\nexport {_Breadcrumb as Breadcrumb};\n\ninterface BreadcrumbItemProps {\n  node: Node<object>,\n  isCurrent: boolean,\n  isDisabled?: boolean,\n  onAction?: (key: Key) => void\n}\n\nfunction BreadcrumbItem({node, isCurrent, isDisabled, onAction}: BreadcrumbItemProps) {\n  // Recreating useBreadcrumbItem because we want to use composition instead of having the link builtin.\n  let linkProps = {\n    'aria-current': isCurrent ? 'page' : null,\n    isDisabled: isDisabled || isCurrent,\n    onPress: () => onAction?.(node.key)\n  };\n\n  return (\n    <li\n      {...filterDOMProps(node.props)}\n      ref={node.props.ref}\n      style={node.props.style}\n      className={node.props.className ?? 'react-aria-Breadcrumb'}>\n      <LinkContext.Provider value={linkProps}>\n        {node.rendered}\n      </LinkContext.Provider>\n    </li>\n  );\n}\n"],"names":[],"version":3,"file":"Breadcrumbs.main.js.map"}