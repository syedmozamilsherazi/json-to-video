{"mappings":"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","sources":["packages/react-aria-components/src/Menu.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nimport {AriaMenuProps, FocusScope, mergeProps, useFocusRing, useMenu, useMenuItem, useMenuSection, useMenuTrigger} from 'react-aria';\nimport {BaseCollection, CollectionProps, ItemRenderProps, useCachedChildren, useCollection, useSSRCollectionNode} from './Collection';\nimport {MenuTriggerProps as BaseMenuTriggerProps, Node, TreeState, useMenuTriggerState, useTreeState} from 'react-stately';\nimport {ContextValue, forwardRefType, Provider, RenderProps, ScrollableProps, SlotProps, StyleProps, useContextProps, useRenderProps, useSlot, useSlottedContext} from './utils';\nimport {filterDOMProps, mergeRefs, useObjectRef, useResizeObserver} from '@react-aria/utils';\nimport {Header} from './Header';\nimport {HoverEvents, Key, LinkDOMProps} from '@react-types/shared';\nimport {KeyboardContext} from './Keyboard';\nimport {OverlayTriggerStateContext} from './Dialog';\nimport {PopoverContext, PopoverProps} from './Popover';\nimport {PressResponder, useHover, useInteractOutside} from '@react-aria/interactions';\nimport React, {createContext, ForwardedRef, forwardRef, ReactElement, ReactNode, RefObject, useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport {RootMenuTriggerState, useSubmenuTriggerState} from '@react-stately/menu';\nimport {Separator, SeparatorContext} from './Separator';\nimport {TextContext} from './Text';\nimport {useSubmenuTrigger} from '@react-aria/menu';\n\nexport const MenuContext = createContext<ContextValue<MenuProps<any>, HTMLDivElement>>(null);\nexport const MenuStateContext = createContext<TreeState<unknown> | null>(null);\nexport const RootMenuTriggerStateContext = createContext<RootMenuTriggerState | null>(null);\n\nexport interface MenuTriggerProps extends BaseMenuTriggerProps {\n  children: ReactNode\n}\n\nexport function MenuTrigger(props: MenuTriggerProps) {\n  let state = useMenuTriggerState(props);\n\n  let ref = useRef<HTMLButtonElement>(null);\n  let {menuTriggerProps, menuProps} = useMenuTrigger({\n    ...props,\n    type: 'menu'\n  }, state, ref);\n  // Allows menu width to match button\n  let [buttonWidth, setButtonWidth] = useState<string | null>(null);\n  let onResize = useCallback(() => {\n    if (ref.current) {\n      setButtonWidth(ref.current.offsetWidth + 'px');\n    }\n  }, [ref]);\n\n  useResizeObserver({\n    ref: ref,\n    onResize: onResize\n  });\n\n  return (\n    <Provider\n      values={[\n        [MenuContext, menuProps],\n        [OverlayTriggerStateContext, state],\n        [RootMenuTriggerStateContext, state],\n        [PopoverContext, {\n          trigger: 'MenuTrigger',\n          triggerRef: ref,\n          placement: 'bottom start',\n          style: {'--trigger-width': buttonWidth} as React.CSSProperties\n        }]\n      ]}>\n      <PressResponder {...menuTriggerProps} ref={ref} isPressed={state.isOpen}>\n        {props.children}\n      </PressResponder>\n    </Provider>\n  );\n}\n\nexport interface SubmenuTriggerProps {\n  /**\n   * The contents of the SubmenuTrigger. The first child should be an Item (the trigger) and the second child should be the Popover (for the submenu).\n   */\n  children: ReactElement[],\n  /**\n   * The delay time in milliseconds for the submenu to appear after hovering over the trigger.\n   * @default 200\n   */\n  delay?: number\n}\n\n/**\n * A submenu trigger is used to wrap a submenu's trigger item and the submenu itself.\n *\n * @version alpha\n */\nexport function SubmenuTrigger(props: SubmenuTriggerProps, ref: ForwardedRef<HTMLDivElement>): JSX.Element | null {\n  return useSSRCollectionNode('submenutrigger', props, ref, props.children, props.children[0]);\n}\n\nfunction SubmenuTriggerInner(props) {\n  let {item, parentMenuRef} = props;\n  let state = useContext(MenuStateContext)!;\n\n  let children = useCachedChildren({\n    items: state.collection.getChildren!(item.key),\n    children: childItem => {\n      switch (childItem.type) {\n        case 'item':\n          return <MenuItemTriggerInner item={childItem} popover={item.rendered[1]} parentMenuRef={parentMenuRef} delay={item.props.delay} />;\n        default:\n          throw new Error('Unsupported element type in SubmenuTrigger: ' + item.type);\n      }\n    }\n  });\n\n  return children;\n}\n\n\nexport interface MenuProps<T> extends Omit<AriaMenuProps<T>, 'children'>, CollectionProps<T>, StyleProps, SlotProps, ScrollableProps<HTMLDivElement> {}\n\nfunction Menu<T extends object>(props: MenuProps<T>, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, MenuContext);\n  let {portal, collection} = useCollection(props);\n\n  // Delay rendering the actual menu until we have the collection so that auto focus works properly.\n  return (\n    <>\n      {collection.size > 0 && <MenuInner props={props} collection={collection} menuRef={ref} />}\n      {portal}\n    </>\n  );\n}\n\ninterface MenuInnerProps<T> {\n  props: MenuProps<T>,\n  collection: BaseCollection<T>,\n  menuRef: RefObject<HTMLDivElement>\n}\n\nfunction MenuInner<T extends object>({props, collection, menuRef: ref}: MenuInnerProps<T>) {\n  let state = useTreeState({\n    ...props,\n    collection,\n    children: undefined\n  });\n  let [popoverContainer, setPopoverContainer] = useState<HTMLDivElement | null>(null);\n  let {menuProps} = useMenu(props, state, ref);\n  let rootMenuTriggerState = useContext(RootMenuTriggerStateContext)!;\n  let popoverContext = useContext(PopoverContext)!;\n\n  let children = useCachedChildren({\n    items: state.collection,\n    children: (item) => {\n      switch (item.type) {\n        case 'section':\n          return <MenuSection section={item} parentMenuRef={ref} />;\n        case 'separator':\n          return <Separator {...item.props} />;\n        case 'item':\n          return <MenuItemInner item={item} />;\n        case 'submenutrigger':\n          return <SubmenuTriggerInner item={item} parentMenuRef={ref} />;\n        default:\n          throw new Error('Unsupported node type in Menu: ' + item.type);\n      }\n    }\n  });\n\n  let isSubmenu = (popoverContext as PopoverProps)?.trigger === 'SubmenuTrigger';\n  useInteractOutside({\n    ref,\n    onInteractOutside: (e) => {\n      if (rootMenuTriggerState && !popoverContainer?.contains(e.target as HTMLElement)) {\n        rootMenuTriggerState.close();\n      }\n    },\n    isDisabled: isSubmenu || rootMenuTriggerState?.expandedKeysStack.length === 0\n  });\n\n  let prevPopoverContainer = useRef<HTMLDivElement | null>(null) ;\n  let [leftOffset, setLeftOffset] = useState({left: 0});\n  useEffect(() => {\n    if (popoverContainer && prevPopoverContainer.current !== popoverContainer && leftOffset.left === 0) {\n      prevPopoverContainer.current = popoverContainer;\n      let {left} = popoverContainer.getBoundingClientRect();\n      setLeftOffset({left: -1 * left});\n    }\n  }, [leftOffset, popoverContainer]);\n\n  return (\n    <FocusScope>\n      <div\n        {...filterDOMProps(props)}\n        {...menuProps}\n        ref={ref}\n        slot={props.slot || undefined}\n        onScroll={props.onScroll}\n        style={props.style}\n        className={props.className ?? 'react-aria-Menu'}>\n        <Provider\n          values={[\n            [MenuStateContext, state],\n            [SeparatorContext, {elementType: 'div'}],\n            [PopoverContext, {UNSTABLE_portalContainer: popoverContainer || undefined}]\n          ]}>\n          {children}\n        </Provider>\n      </div>\n      <div ref={setPopoverContainer} style={{width: '100vw', position: 'absolute', top: 0, ...leftOffset}} />\n    </FocusScope>\n  );\n}\n\n/**\n * A menu displays a list of actions or options that a user can choose.\n */\nconst _Menu = /*#__PURE__*/ (forwardRef as forwardRefType)(Menu);\nexport {_Menu as Menu};\n\ninterface MenuSectionProps<T> extends StyleProps {\n  section: Node<T>,\n  parentMenuRef: RefObject<HTMLDivElement>\n}\n\nfunction MenuSection<T>({section, className, style, parentMenuRef, ...otherProps}: MenuSectionProps<T>) {\n  let state = useContext(MenuStateContext)!;\n  let [headingRef, heading] = useSlot();\n  let {headingProps, groupProps} = useMenuSection({\n    heading,\n    'aria-label': section['aria-label'] ?? undefined\n  });\n\n  let children = useCachedChildren({\n    items: state.collection.getChildren!(section.key),\n    children: item => {\n      switch (item.type) {\n        case 'header': {\n          let {ref, ...otherProps} = item.props;\n          return (\n            <Header\n              {...headingProps}\n              {...otherProps}\n              ref={mergeRefs(headingRef, ref)}>\n              {item.rendered}\n            </Header>\n          );\n        }\n        case 'item':\n          return <MenuItemInner item={item} />;\n        case 'submenutrigger':\n          return <SubmenuTriggerInner item={item} parentMenuRef={parentMenuRef} />;\n        default:\n          throw new Error('Unsupported element type in Section: ' + item.type);\n      }\n    }\n  });\n\n  return (\n    <section\n      {...filterDOMProps(otherProps)}\n      {...groupProps}\n      className={className || section.props?.className || 'react-aria-Section'}\n      style={style || section.props?.style}\n      ref={section.props.ref}>\n      {children}\n    </section>\n  );\n}\n\nexport interface MenuItemRenderProps extends ItemRenderProps {\n  /**\n   * Whether the item has a submenu.\n   *\n   * @selector [data-has-submenu]\n   */\n  hasSubmenu: boolean,\n  /**\n   * Whether the item's submenu is open.\n   *\n   * @selector [data-open]\n   */\n  isOpen: boolean\n}\n\nexport interface MenuItemProps<T = object> extends RenderProps<MenuItemRenderProps>, LinkDOMProps, HoverEvents {\n  /** The unique id of the item. */\n  id?: Key,\n  /** The object value that this item represents. When using dynamic collections, this is set automatically. */\n  value?: T,\n  /** A string representation of the item's contents, used for features like typeahead. */\n  textValue?: string,\n  /** An accessibility label for this item. */\n  'aria-label'?: string,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the item is selected. */\n  onAction?: () => void\n}\n\nfunction MenuItem<T extends object>(props: MenuItemProps<T>, ref: ForwardedRef<HTMLDivElement>): JSX.Element | null {\n  return useSSRCollectionNode('item', props, ref, props.children);\n}\n\n/**\n * A MenuItem represents an individual action in a Menu.\n */\nconst _MenuItem = /*#__PURE__*/ (forwardRef as forwardRefType)(MenuItem);\nexport {_MenuItem as MenuItem};\n\ninterface MenuItemInnerProps<T> {\n  item: Node<T>\n}\n\nfunction MenuItemInner<T>({item}: MenuItemInnerProps<T>) {\n  let state = useContext(MenuStateContext)!;\n  let ref = useObjectRef<any>(item.props.ref);\n  let {menuItemProps, labelProps, descriptionProps, keyboardShortcutProps, ...states} = useMenuItem({key: item.key, 'aria-label': item.props?.['aria-label']}, state, ref);\n\n  let props: MenuItemProps<T> = item.props;\n  let {isFocusVisible, focusProps} = useFocusRing();\n  let {hoverProps, isHovered} = useHover({\n    isDisabled: states.isDisabled,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n  let renderProps = useRenderProps({\n    ...props,\n    id: undefined,\n    children: item.rendered,\n    defaultClassName: 'react-aria-MenuItem',\n    values: {\n      ...states,\n      isHovered,\n      isFocusVisible,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      hasSubmenu: false,\n      isOpen: false\n    }\n  });\n\n  let ElementType: React.ElementType = props.href ? 'a' : 'div';\n\n  return (\n    <ElementType\n      {...mergeProps(menuItemProps, focusProps, hoverProps)}\n      {...renderProps}\n      ref={ref}\n      data-disabled={states.isDisabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={states.isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-pressed={states.isPressed || undefined}\n      data-selected={states.isSelected || undefined}\n      data-selection-mode={state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode}>\n      <Provider\n        values={[\n          [TextContext, {\n            slots: {\n              label: labelProps,\n              description: descriptionProps\n            }\n          }],\n          [KeyboardContext, keyboardShortcutProps]\n        ]}>\n        {renderProps.children}\n      </Provider>\n    </ElementType>\n  );\n}\n\ninterface MenuItemTriggerInnerProps<T> {\n  item: Node<T>,\n  popover: ReactElement,\n  parentMenuRef: RefObject<HTMLDivElement>,\n  delay?: number\n}\n\nfunction MenuItemTriggerInner<T>({item, popover, parentMenuRef, delay}: MenuItemTriggerInnerProps<T>) {\n  let state = useContext(MenuStateContext)!;\n  let popoverContext = useSlottedContext(PopoverContext)!;\n  let ref = useObjectRef<any>(item.props.ref);\n  let rootMenuTriggerState = useContext(RootMenuTriggerStateContext)!;\n  let submenuTriggerState = useSubmenuTriggerState({triggerKey: item.key}, rootMenuTriggerState);\n  let submenuRef = useRef<HTMLDivElement>(null);\n  let {submenuTriggerProps, submenuProps, popoverProps} = useSubmenuTrigger({\n    node: item,\n    parentMenuRef,\n    submenuRef,\n    delay\n  }, submenuTriggerState, ref);\n  let {menuItemProps, labelProps, descriptionProps, keyboardShortcutProps, ...states} = useMenuItem({\n    key: item.key,\n    ...submenuTriggerProps\n  }, state, ref);\n  let props: MenuItemProps<T> = item.props;\n  let {hoverProps, isHovered} = useHover({isDisabled: states.isDisabled});\n  let {isFocusVisible, focusProps} = useFocusRing();\n  let renderProps = useRenderProps({\n    ...props,\n    id: undefined,\n    children: item.rendered,\n    defaultClassName: 'react-aria-MenuItem',\n    values: {\n      ...states,\n      isHovered,\n      isFocusVisible,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      hasSubmenu: true,\n      isOpen: submenuTriggerState.isOpen\n    }\n  });\n\n  return (\n    <Provider\n      values={[\n        [TextContext, {\n          slots: {\n            label: labelProps,\n            description: descriptionProps\n          }\n        }],\n        [KeyboardContext, keyboardShortcutProps],\n        [MenuContext, submenuProps],\n        [OverlayTriggerStateContext, submenuTriggerState],\n        [PopoverContext, {\n          ref: submenuRef,\n          trigger: 'SubmenuTrigger',\n          triggerRef: ref,\n          placement: 'end top',\n          UNSTABLE_portalContainer: popoverContext.UNSTABLE_portalContainer || undefined,\n          ...popoverProps\n        }]\n      ]}>\n      <div\n        {...mergeProps(menuItemProps, focusProps, hoverProps)}\n        {...renderProps}\n        ref={ref}\n        data-disabled={states.isDisabled || undefined}\n        data-hovered={isHovered || undefined}\n        data-focused={states.isFocused || undefined}\n        data-focus-visible={isFocusVisible || undefined}\n        data-pressed={states.isPressed || undefined}\n        data-selected={states.isSelected || undefined}\n        data-selection-mode={state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode}\n        data-has-submenu\n        data-open={submenuTriggerState.isOpen || undefined}>\n        {renderProps.children}\n      </div>\n      {popover}\n    </Provider>\n  );\n}\n"],"names":[],"version":3,"file":"Menu.main.js.map"}