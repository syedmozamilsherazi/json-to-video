{"mappings":"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","sources":["packages/react-aria-components/src/utils.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps as SharedDOMProps} from '@react-types/shared';\nimport {mergeProps, mergeRefs, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport React, {Context, createContext, CSSProperties, ForwardedRef, JSX, ReactNode, RefCallback, RefObject, UIEvent, useCallback, useContext, useMemo, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from 'react-aria';\n\n// Override forwardRef types so generics work.\ndeclare function forwardRef<T, P = {}>(\n  render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n): (props: P & React.RefAttributes<T>) => React.ReactElement | null;\n\nexport type forwardRefType = typeof forwardRef;\n\nexport const DEFAULT_SLOT = Symbol('default');\n\ninterface SlottedValue<T> {\n  slots?: Record<string | symbol, T>\n}\n\nexport type SlottedContextValue<T> = SlottedValue<T> | T | null | undefined;\nexport type ContextValue<T, E extends Element> = SlottedContextValue<WithRef<T, E>>;\n\ntype ProviderValue<T> = [Context<T>, T];\ntype ProviderValues<A, B, C, D, E, F, G, H, I, J, K> =\n  | [ProviderValue<A>]\n  | [ProviderValue<A>, ProviderValue<B>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>, ProviderValue<G>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>, ProviderValue<G>, ProviderValue<H>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>, ProviderValue<G>, ProviderValue<H>, ProviderValue<I>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>, ProviderValue<G>, ProviderValue<H>, ProviderValue<I>, ProviderValue<J>]\n  | [ProviderValue<A>, ProviderValue<B>, ProviderValue<C>, ProviderValue<D>, ProviderValue<E>, ProviderValue<F>, ProviderValue<G>, ProviderValue<H>, ProviderValue<I>, ProviderValue<J>, ProviderValue<K>];\n\ninterface ProviderProps<A, B, C, D, E, F, G, H, I, J, K> {\n  values: ProviderValues<A, B, C, D, E, F, G, H, I, J, K>,\n  children: ReactNode\n}\n\nexport function Provider<A, B, C, D, E, F, G, H, I, J, K>({values, children}: ProviderProps<A, B, C, D, E, F, G, H, I, J, K>): JSX.Element {\n  for (let [Context, value] of values) {\n    // @ts-ignore\n    children = <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  return children as JSX.Element;\n}\n\nexport interface StyleProps {\n  /** The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. */\n  className?: string,\n  /** The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. */\n  style?: CSSProperties\n}\n\nexport interface DOMProps extends StyleProps, SharedDOMProps {\n  /** The children of the component. */\n  children?: ReactNode\n}\n\nexport interface ScrollableProps<T extends Element> {\n  /** Handler that is called when a user scrolls. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event). */\n  onScroll?: (e: UIEvent<T>) => void\n}\n\nexport interface StyleRenderProps<T> {\n  /** The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state. */\n  className?: string | ((values: T & {defaultClassName: string | undefined}) => string),\n  /** The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state. */\n  style?: CSSProperties | ((values: T & {defaultStyle: CSSProperties}) => CSSProperties)\n}\n\nexport interface RenderProps<T> extends StyleRenderProps<T> {\n  /** The children of the component. A function may be provided to alter the children based on component state. */\n  children?: ReactNode | ((values: T & {defaultChildren: ReactNode | undefined}) => ReactNode)\n}\n\ninterface RenderPropsHookOptions<T> extends RenderProps<T>, SharedDOMProps, AriaLabelingProps {\n  values: T,\n  defaultChildren?: ReactNode,\n  defaultClassName?: string,\n  defaultStyle?: CSSProperties\n}\n\nexport function useRenderProps<T>(props: RenderPropsHookOptions<T>) {\n  let {\n    className,\n    style,\n    children,\n    defaultClassName = undefined,\n    defaultChildren = undefined,\n    defaultStyle,\n    values\n  } = props;\n\n  return useMemo(() => {\n    let computedClassName: string | undefined;\n    let computedStyle: React.CSSProperties | undefined;\n    let computedChildren: React.ReactNode | undefined;\n\n    if (typeof className === 'function') {\n      computedClassName = className({...values, defaultClassName});\n    } else {\n      computedClassName = className;\n    }\n\n    if (typeof style === 'function') {\n      computedStyle = style({...values, defaultStyle: defaultStyle || {}});\n    } else {\n      computedStyle = style;\n    }\n\n    if (typeof children === 'function') {\n      computedChildren = children({...values, defaultChildren});\n    } else if (children == null) {\n      computedChildren = defaultChildren;\n    } else {\n      computedChildren = children;\n    }\n\n    return {\n      className: computedClassName ?? defaultClassName,\n      style: (computedStyle || defaultStyle) ? {...defaultStyle, ...computedStyle} : undefined,\n      children: computedChildren ?? defaultChildren,\n      'data-rac': ''\n    };\n  }, [className, style, children, defaultClassName, defaultChildren, defaultStyle, values]);\n}\n\n/**\n * A helper function that accepts a user-provided render prop value (either a static value or a function),\n * and combines it with another value to create a final result.\n */\nexport function composeRenderProps<T, U, V extends T>(\n  // https://stackoverflow.com/questions/60898079/typescript-type-t-or-function-t-usage\n  value: T extends any ? (T | ((renderProps: U) => V)) : never,\n  wrap: (prevValue: T, renderProps: U) => V\n): (renderProps: U) => V {\n  return (renderProps) => wrap(typeof value === 'function' ? value(renderProps) : value, renderProps);\n}\n\nexport type WithRef<T, E> = T & {ref?: ForwardedRef<E>};\nexport interface SlotProps {\n  /**\n   * A slot name for the component. Slots allow the component to receive props from a parent component.\n   * An explicit `null` value indicates that the local props completely override all props received from a parent.\n   */\n  slot?: string | null\n}\n\nexport function useSlottedContext<T>(context: Context<SlottedContextValue<T>>, slot?: string | null): T | null | undefined {\n  let ctx = useContext(context);\n  if (slot === null) {\n    // An explicit `null` slot means don't use context.\n    return null;\n  }\n  if (ctx && typeof ctx === 'object' && 'slots' in ctx && ctx.slots) {\n    let availableSlots = new Intl.ListFormat().format(Object.keys(ctx.slots).map(p => `\"${p}\"`));\n\n    if (!slot && !ctx.slots[DEFAULT_SLOT]) {\n      throw new Error(`A slot prop is required. Valid slot names are ${availableSlots}.`);\n    }\n    let slotKey = slot || DEFAULT_SLOT;\n    if (!ctx.slots[slotKey]) {\n      // @ts-ignore\n      throw new Error(`Invalid slot \"${slot}\". Valid slot names are ${availableSlots}.`);\n    }\n    return ctx.slots[slotKey];\n  }\n  // @ts-ignore\n  return ctx;\n}\n\nexport function useContextProps<T, U extends SlotProps, E extends Element>(props: T & SlotProps, ref: ForwardedRef<E>, context: Context<ContextValue<U, E>>): [T, RefObject<E>] {\n  let ctx = useSlottedContext(context, props.slot) || {};\n  // @ts-ignore - TS says \"Type 'unique symbol' cannot be used as an index type.\" but not sure why.\n  let {ref: contextRef, ...contextProps} = ctx as any;\n  let mergedRef = useObjectRef(useMemo(() => mergeRefs(ref, contextRef), [ref, contextRef]));\n  let mergedProps = mergeProps(contextProps, props) as unknown as T;\n\n  // mergeProps does not merge `style`. Adding this there might be a breaking change.\n  if (\n    'style' in contextProps &&\n    contextProps.style &&\n    'style' in props &&\n    props.style\n  ) {\n    if (typeof contextProps.style === 'function' || typeof props.style === 'function') {\n      // @ts-ignore\n      mergedProps.style = (renderProps) => {\n        let contextStyle = typeof contextProps.style === 'function' ? contextProps.style(renderProps) : contextProps.style;\n        let defaultStyle = {...renderProps.defaultStyle, ...contextStyle};\n        let style = typeof props.style === 'function' \n          ? props.style({...renderProps, defaultStyle})\n          : props.style;\n        return {...defaultStyle, ...style};\n      };\n    } else {\n      // @ts-ignore\n      mergedProps.style = {...contextProps.style, ...props.style};\n    }\n  }\n\n  return [mergedProps, mergedRef];\n}\n\nexport function useSlot(): [RefCallback<Element>, boolean] {\n  // Assume we do have the slot in the initial render.\n  let [hasSlot, setHasSlot] = useState(true);\n  let hasRun = useRef(false);\n\n  // A callback ref which will run when the slotted element mounts.\n  // This should happen before the useLayoutEffect below.\n  let ref = useCallback(el => {\n    hasRun.current = true;\n    setHasSlot(!!el);\n  }, []);\n\n  // If the callback hasn't been called, then reset to false.\n  useLayoutEffect(() => {\n    if (!hasRun.current) {\n      setHasSlot(false);\n    }\n  }, []);\n\n  return [ref, hasSlot];\n}\n\nexport function useEnterAnimation(ref: RefObject<HTMLElement>, isReady: boolean = true) {\n  let [isEntering, setEntering] = useState(true);\n  useAnimation(ref, isEntering && isReady, useCallback(() => setEntering(false), []));\n  return isEntering && isReady;\n}\n\nexport function useExitAnimation(ref: RefObject<HTMLElement>, isOpen: boolean) {\n  // State to trigger a re-render after animation is complete, which causes the element to be removed from the DOM.\n  // Ref to track the state we're in, so we don't immediately reset isExiting to true after the animation.\n  let [isExiting, setExiting] = useState(false);\n  let [exitState, setExitState] = useState('idle');\n\n  // If isOpen becomes false, set isExiting to true.\n  if (!isOpen && ref.current && exitState === 'idle') {\n    isExiting = true;\n    setExiting(true);\n    setExitState('exiting');\n  }\n\n  // If we exited, and the element has been removed, reset exit state to idle.\n  if (!ref.current && exitState === 'exited') {\n    setExitState('idle');\n  }\n\n  useAnimation(\n    ref,\n    isExiting,\n    useCallback(() => {\n      setExitState('exited');\n      setExiting(false);\n    }, [])\n  );\n\n  return isExiting;\n}\n\nfunction useAnimation(ref: RefObject<HTMLElement>, isActive: boolean, onEnd: () => void) {\n  let prevAnimation = useRef<string | null>(null);\n  if (isActive && ref.current) {\n    // This is ok because we only read it in the layout effect below, immediately after the commit phase.\n    // We could move this to another effect that runs every render, but this would be unnecessarily slow.\n    // We only need the computed style right before the animation becomes active.\n    // eslint-disable-next-line rulesdir/pure-render\n    prevAnimation.current = window.getComputedStyle(ref.current).animation;\n  }\n\n  useLayoutEffect(() => {\n    if (isActive && ref.current) {\n      // Make sure there's actually an animation, and it wasn't there before we triggered the update.\n      let computedStyle = window.getComputedStyle(ref.current);\n      if (computedStyle.animationName && computedStyle.animationName !== 'none' && computedStyle.animation !== prevAnimation.current) {\n        let onAnimationEnd = (e: AnimationEvent) => {\n          if (e.target === ref.current) {\n            element.removeEventListener('animationend', onAnimationEnd);\n            ReactDOM.flushSync(() => {onEnd();});\n          }\n        };\n\n        let element = ref.current;\n        element.addEventListener('animationend', onAnimationEnd);\n        return () => {\n          element.removeEventListener('animationend', onAnimationEnd);\n        };\n      } else {\n        onEnd();\n      }\n    }\n  }, [ref, isActive, onEnd]);\n}\n\n// React doesn't understand the <template> element, which doesn't have children like a normal element.\n// It will throw an error during hydration when it expects the firstChild to contain content rendered\n// on the server, when in reality, the browser will have placed this inside the `content` document fragment.\n// This monkey patches the firstChild property for our special hidden template elements to work around this error.\n// See https://github.com/facebook/react/issues/19932\nif (typeof HTMLTemplateElement !== 'undefined') {\n  const getFirstChild = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild')!.get!;\n  Object.defineProperty(HTMLTemplateElement.prototype, 'firstChild', {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      if (this.dataset.reactAriaHidden) {\n        return this.content.firstChild;\n      } else {\n        return getFirstChild.call(this);\n      }\n    }\n  });\n}\n\nexport const HiddenContext = createContext<boolean>(false);\n\n// Portal to nowhere\nconst hiddenFragment = typeof DocumentFragment !== 'undefined' ? new DocumentFragment() : null;\n\nexport function Hidden(props: {children: ReactNode}) {\n  let isHidden = useContext(HiddenContext);\n  let isSSR = useIsSSR();\n  if (isHidden) {\n    // Don't hide again if we are already hidden.\n    return <>{props.children}</>;\n  }\n\n  let children = (\n    <HiddenContext.Provider value>\n      {props.children}\n    </HiddenContext.Provider>\n  );\n\n  // In SSR, portals are not supported by React. Instead, render into a <template>\n  // element, which the browser will never display to the user. In addition, the\n  // content is not part of the DOM tree, so it won't affect ids or other accessibility attributes.\n  return isSSR\n    ? <template data-react-aria-hidden>{children}</template>\n    : ReactDOM.createPortal(children, hiddenFragment!);\n}\n\n// Creates a component that forwards its ref and returns null if it is in a <Hidden> subtree.\n// Note: this function is handled specially in the documentation generator. If you change it, you'll need to update DocsTransformer as well.\nexport function createHideableComponent<T, P = {}>(fn: (props: P, ref: React.Ref<T>) => React.ReactElement | null): (props: P & React.RefAttributes<T>) => React.ReactElement | null {\n  let Wrapper = (props: P, ref: React.Ref<T>) => {\n    let isHidden = useContext(HiddenContext);\n    if (isHidden) {\n      return null;\n    }\n\n    return fn(props, ref);\n  };\n  // @ts-ignore - for react dev tools\n  Wrapper.displayName = fn.displayName || fn.name;\n  return (React.forwardRef as forwardRefType)(Wrapper);\n}\n\n/**\n * Filters out `data-*` attributes to keep them from being passed down and duplicated.\n * @param props\n */\nexport function removeDataAttributes<T>(props: T): T {\n  const prefix = /^(data-.*)$/;\n  let filteredProps = {} as T;\n\n  for (const prop in props) {\n    if (!prefix.test(prop)) {\n      filteredProps[prop] = props[prop];\n    }\n  }\n\n  return filteredProps;\n}\n\n// Override base type to change the default.\nexport interface RACValidation {\n  /**\n   * Whether to use native HTML form validation to prevent form submission\n   * when the value is missing or invalid, or mark the field as required\n   * or invalid via ARIA.\n   * @default 'native'\n   */\n  validationBehavior?: 'native' | 'aria'\n}\n"],"names":[],"version":3,"file":"utils.module.js.map"}