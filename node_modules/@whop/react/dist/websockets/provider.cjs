"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WhopWebsocketProvider", {
    enumerable: true,
    get: function() {
        return WhopWebsocketProvider;
    }
});
const _api = require("@whop/api");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _context = require("./context");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function WhopWebsocketProvider({ children, joinCustom, joinExperience, onAppMessage }) {
    const [websocket, setWebsocket] = (0, _react.useState)();
    const [connectionStatus, setConnectionStatus] = (0, _react.useState)("disconnected");
    const sdkRef = (0, _react.useRef)(null);
    (0, _react.useEffect)(()=>{
        if (!sdkRef.current) {
            sdkRef.current = (0, _api.WhopClientSdk)();
        }
        const whopSdk = sdkRef.current;
        const websocket = whopSdk.websockets.client({
            joinCustom,
            joinExperience
        });
        setWebsocket(websocket);
        websocket.on("connectionStatus", setConnectionStatus);
        return websocket.connect();
    }, [
        joinExperience,
        joinCustom
    ]);
    (0, _react.useEffect)(()=>{
        if (websocket && onAppMessage) {
            websocket.on("appMessage", onAppMessage);
            return ()=>{
                websocket.off("appMessage", onAppMessage);
            };
        }
    }, [
        onAppMessage,
        websocket
    ]);
    const value = (0, _react.useMemo)(()=>{
        if (websocket) {
            return {
                status: connectionStatus,
                websocket
            };
        }
        return {
            status: "initializing"
        };
    }, [
        websocket,
        connectionStatus
    ]);
    return _react.default.createElement(_context.WhopWebsocketContext, {
        value: value
    }, children);
}
