'use client';
import classNames from 'classnames';
import { RadioGroup as RadioButtonGroupPrimitive } from 'radix-ui';
import * as React from 'react';
import { radioButtonGroupPropDefs } from './radio-button-group.props';
import { useIsomorphicLayoutEffect } from '../../helpers/use-isomorphic-layout-effect';
const RadioButtonGroupContext = React.createContext({});
const RadioButtonGroupRoot = (props) => {
    const { className, color = radioButtonGroupPropDefs.color.default, highContrast = radioButtonGroupPropDefs.highContrast.default, children, ...rootProps } = props;
    return (React.createElement(RadioButtonGroupPrimitive.Root, { "data-accent-color": color, ...rootProps, className: classNames('fui-RadioButtonGroupRoot', className, { 'fui-high-contrast': highContrast }) },
        React.createElement(RadioButtonGroupContext.Provider, { value: React.useMemo(() => ({ color, highContrast }), [color, highContrast]) }, children)));
};
RadioButtonGroupRoot.displayName = 'RadioButtonGroupRoot';
const RadioButtonGroupItem = (props) => {
    const { children, className, style, ...itemProps } = props;
    const updatedChildren = addOverlayToChildren(children);
    return (React.createElement(RadioButtonGroupPrimitive.Item, { style: style, ...itemProps, className: classNames('fui-reset', 'fui-RadioButtonGroupButton', 'fui-RadioButtonGroupItem', className), asChild: true }, updatedChildren));
};
RadioButtonGroupItem.displayName = 'RadioButtonGroupItem';
const RadioButtonGroupIcon = (props) => {
    const { color, highContrast } = React.useContext(RadioButtonGroupContext);
    const { className, ...itemProps } = props;
    return (React.createElement("div", { "data-accent-color": color, className: classNames('fui-RadioButtonGroupIcon', { 'fui-high-contrast': highContrast }, className), "aria-hidden": true, ...itemProps },
        React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none" },
            React.createElement("path", { d: "M6 10.5L8.5 13L14 7.5", stroke: "currentColor", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round" }))));
};
RadioButtonGroupIcon.displayName = 'RadioButtonGroupIcon';
const addOverlayToChildren = (children) => {
    if (React.Children.count(children) === 1) {
        const child = React.Children.only(children);
        return React.cloneElement(child, {}, React.Children.toArray(child.props.children).concat(React.createElement(RadioButtonGroupOverlay, null)));
    }
    return children;
};
const RadioButtonGroupOverlay = () => {
    const ref = React.useRef(null);
    useIsomorphicLayoutEffect(() => {
        var _a, _b, _c;
        const parentElement = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.parentElement;
        if (!parentElement)
            return;
        const parentElementComputedStyles = getComputedStyle(parentElement);
        (_b = ref.current) === null || _b === void 0 ? void 0 : _b.style.setProperty('--parent-border-width', parentElementComputedStyles.borderWidth);
        (_c = ref.current) === null || _c === void 0 ? void 0 : _c.style.setProperty('--parent-border-radius', parentElementComputedStyles.borderRadius);
    }, [ref]);
    return React.createElement("div", { ref: ref, className: "fui-RadioButtonGroupOverlay", "aria-hidden": true });
};
export { RadioButtonGroupIcon as Icon, RadioButtonGroupItem as Item, RadioButtonGroupRoot as Root };
//# sourceMappingURL=radio-button-group.js.map