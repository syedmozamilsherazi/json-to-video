'use client';
import classNames from 'classnames';
import { Slider as SliderPrimitive } from 'radix-ui';
import * as React from 'react';
import { sliderPropDefs } from './slider.props';
const Slider = (props) => {
    var _a, _b;
    const { className, size = sliderPropDefs.size.default, color = sliderPropDefs.color.default, highContrast = sliderPropDefs.highContrast.default, tabIndex, ...sliderProps } = props;
    return (React.createElement(SliderPrimitive.Root, { "data-accent-color": color, ...sliderProps, className: classNames('fui-SliderRoot', className, `fui-r-size-${size}`, {
            'fui-high-contrast': highContrast,
        }) },
        React.createElement(SliderPrimitive.Track, { className: "fui-SliderTrack" },
            React.createElement(SliderPrimitive.Range, { className: classNames('fui-SliderRange', {
                    'fui-high-contrast': highContrast,
                }), "data-inverted": sliderProps.inverted ? '' : undefined })),
        ((_b = (_a = sliderProps.value) !== null && _a !== void 0 ? _a : sliderProps.defaultValue) !== null && _b !== void 0 ? _b : []).map((value, index) => (React.createElement(SliderPrimitive.Thumb, { key: index, className: "fui-SliderThumb", ...(tabIndex !== undefined ? { tabIndex } : undefined) })))));
};
Slider.displayName = 'Slider';
export { Slider };
//# sourceMappingURL=slider.js.map