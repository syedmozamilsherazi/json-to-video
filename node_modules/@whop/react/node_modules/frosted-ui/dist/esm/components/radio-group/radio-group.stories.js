import React from 'react';
import { Code, RadioGroup, Text, radioGroupPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/RadioGroup',
    component: RadioGroup.Root,
    args: {
        disabled: false,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {
        size: radioGroupPropDefs.size.default,
        color: radioGroupPropDefs.color.default,
        highContrast: radioGroupPropDefs.highContrast.default,
    },
    render: (args) => (React.createElement(RadioGroup.Root, { defaultValue: "1", ...args },
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)', flexDirection: 'column' } },
            React.createElement(RadioGroup.Item, { value: "1" }, "Default"),
            React.createElement(RadioGroup.Item, { value: "2" }, "Comfortable"),
            React.createElement(RadioGroup.Item, { value: "3" }, "Compact")))),
};
export const Composed = {
    args: {
        size: radioGroupPropDefs.size.default,
        color: radioGroupPropDefs.color.default,
        highContrast: radioGroupPropDefs.highContrast.default,
    },
    render: (args) => (React.createElement(RadioGroup.Root, { defaultValue: "1", ...args },
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)', flexDirection: 'column' } },
            React.createElement(Text, { as: "label", size: "2" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "1" }),
                    " Default")),
            React.createElement(Text, { as: "label", size: "2" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "2" }),
                    " Comfortable")),
            React.createElement(Text, { as: "label", size: "2" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "3" }),
                    " Compact"))))),
};
export const Size = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(RadioGroup.Root, { ...args, size: "1", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, size: "2", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, size: "3", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })))),
};
export const Color = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
        React.createElement(RadioGroup.Root, { ...args, color: "indigo", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "cyan", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "orange", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "crimson", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })))),
};
export const HighContrast = {
    name: 'High Contrast',
    render: (args) => (React.createElement("div", { style: {
            display: 'inline-grid',
            gridTemplateRows: 'repeat(2, 1fr)',
            gap: 'var(--space-2)',
            gridAutoFlow: 'column',
        } },
        React.createElement(RadioGroup.Root, { ...args, color: "indigo", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "indigo", defaultValue: "1", highContrast: true },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "cyan", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "cyan", defaultValue: "1", highContrast: true },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "orange", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "orange", defaultValue: "1", highContrast: true },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "crimson", defaultValue: "1" },
            React.createElement(RadioGroup.Item, { value: "1" })),
        React.createElement(RadioGroup.Root, { ...args, color: "crimson", defaultValue: "1", highContrast: true },
            React.createElement(RadioGroup.Item, { value: "1" })))),
};
export const Alignment = {
    name: 'Alignment with text',
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
        React.createElement(Text, { style: { marginBottom: 12 } },
            "Composing ",
            React.createElement(Code, null, "RadioGroup"),
            " within ",
            React.createElement(Code, null, "Text"),
            " automatically centers it with the first line of text."),
        React.createElement(RadioGroup.Root, { ...args, size: "1", defaultValue: "1" },
            React.createElement(Text, { as: "label", size: "2" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "1" }),
                    " Default")),
            React.createElement(Text, { as: "label", size: "2" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "2" }),
                    " Compact"))),
        React.createElement(RadioGroup.Root, { ...args, size: "2", defaultValue: "1", style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-1)' } },
            React.createElement(Text, { as: "label", size: "3" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "1" }),
                    " Default")),
            React.createElement(Text, { as: "label", size: "3" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "2" }),
                    " Compact"))),
        React.createElement(RadioGroup.Root, { ...args, size: "3", defaultValue: "1", style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-2)' } },
            React.createElement(Text, { as: "label", size: "4" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "1" }),
                    " Default")),
            React.createElement(Text, { as: "label", size: "4" },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                    React.createElement(RadioGroup.Item, { value: "2" }),
                    " Compact"))))),
};
//# sourceMappingURL=radio-group.stories.js.map