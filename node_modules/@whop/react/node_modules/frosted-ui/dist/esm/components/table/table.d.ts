import * as React from 'react';
import type { GetPropDefTypes } from '../../helpers';
import { Button } from '../button';
import { tableCellPropDefs, tableRootPropDefs, tableRowPropDefs } from './table.props';
type TableRootOwnProps = GetPropDefTypes<typeof tableRootPropDefs>;
interface TableRootProps extends React.ComponentProps<'div'>, TableRootOwnProps {
}
declare const TableRoot: {
    (props: TableRootProps): React.JSX.Element;
    displayName: string;
};
type TableTableOwnProps = GetPropDefTypes<typeof tableRootPropDefs>;
interface TableTableProps extends React.ComponentProps<'table'>, TableTableOwnProps {
}
declare const TableTable: {
    (props: TableTableProps): React.JSX.Element;
    displayName: string;
};
interface TableHeaderProps extends React.ComponentProps<'thead'> {
}
declare const TableHeader: {
    (props: TableHeaderProps): React.JSX.Element;
    displayName: string;
};
interface TableBodyProps extends React.ComponentProps<'tbody'> {
}
declare const TableBody: {
    (props: TableBodyProps): React.JSX.Element;
    displayName: string;
};
interface TableFooterProps extends React.ComponentProps<'tfoot'> {
}
declare const TableFooter: {
    (props: TableFooterProps): React.JSX.Element;
    displayName: string;
};
type TableRowOwnProps = GetPropDefTypes<typeof tableRowPropDefs>;
interface TableRowProps extends Omit<React.ComponentProps<'tr'>, keyof TableRowOwnProps>, TableRowOwnProps {
}
declare const TableRow: {
    (props: TableRowProps): React.JSX.Element;
    displayName: string;
};
type TableCellImplOwnProps = GetPropDefTypes<typeof tableCellPropDefs>;
interface TableCellImplProps extends Omit<React.ComponentProps<'td'>, keyof TableCellImplOwnProps>, TableCellImplOwnProps {
    tag?: 'td' | 'th';
}
declare const TableCellImpl: {
    (props: TableCellImplProps): React.JSX.Element;
    displayName: string;
};
interface TableCellProps extends Omit<React.ComponentProps<typeof TableCellImpl>, 'tag'> {
}
declare const TableCell: {
    (props: TableCellProps): React.JSX.Element;
    displayName: string;
};
interface TableColumnHeaderCellProps extends Omit<React.ComponentProps<'th'>, keyof TableCellImplOwnProps>, TableCellImplOwnProps {
}
declare const TableColumnHeaderCell: {
    (props: TableColumnHeaderCellProps): React.JSX.Element;
    displayName: string;
};
interface TableRowHeaderCellProps extends Omit<React.ComponentProps<'th'>, keyof TableCellImplOwnProps>, TableCellImplOwnProps {
}
declare const TableRowHeaderCell: {
    (props: TableRowHeaderCellProps): React.JSX.Element;
    displayName: string;
};
interface TableBottomBarProps extends React.ComponentProps<'div'> {
}
declare const TableBottomBar: {
    (props: TableBottomBarProps): React.JSX.Element;
    displayName: string;
};
interface TableColumnHeaderCellButtonProps extends Omit<React.ComponentProps<typeof Button>, 'highContrast' | 'color' | 'variant' | 'size'> {
    sortDirection?: 'asc' | 'desc' | false;
    isSortable?: boolean;
}
declare const TableColumnHeaderCellButton: {
    (props: TableColumnHeaderCellButtonProps): React.JSX.Element;
    displayName: string;
};
export { TableBody as Body, TableBottomBar as BottomBar, TableCell as Cell, TableColumnHeaderCell as ColumnHeaderCell, TableColumnHeaderCellButton as ColumnHeaderCellButton, TableFooter as Footer, TableHeader as Header, TableRoot as Root, TableRow as Row, TableRowHeaderCell as RowHeaderCell, TableTable as Table, };
export type { TableBodyProps as BodyProps, TableBottomBarProps as BottomBarProps, TableCellProps as CellProps, TableColumnHeaderCellButtonProps as ColumnHeaderCellButtonProps, TableColumnHeaderCellProps as ColumnHeaderCellProps, TableFooterProps as FooterProps, TableHeaderProps as HeaderProps, TableRootProps as RootProps, TableRowHeaderCellProps as RowHeaderCellProps, TableRowProps as RowProps, TableTableProps as TableProps, };
