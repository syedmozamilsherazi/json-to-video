import React from 'react';
import { Code, Spinner, Switch, Text, spinnerPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/Spinner',
    component: Spinner,
    args: {
        size: spinnerPropDefs.size.default,
        loading: spinnerPropDefs.loading.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    name: 'Default',
    render: (args) => React.createElement(Spinner, { ...args }),
};
export const Sizes = {
    name: 'Size',
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-4)' } },
        React.createElement(Spinner, { ...args, size: "1" }),
        React.createElement(Spinner, { ...args, size: "2" }),
        React.createElement(Spinner, { ...args, size: "3" }),
        React.createElement(Spinner, { ...args, size: "4" }),
        React.createElement(Spinner, { ...args, size: "5" }),
        React.createElement(Spinner, { ...args, size: "6" }))),
};
export const WithChildren = {
    name: 'With children',
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-5)', maxWidth: 640 } },
        React.createElement(Text, null,
            "Use the ",
            React.createElement(Code, null, "loading"),
            " prop to control whether the spinner or its children are displayed. Spinner preserves the dimensions of children when they are hidden and disables interactive elements."),
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-4)' } },
            React.createElement(Spinner, { ...args, loading: true },
                React.createElement(Switch, { defaultChecked: true })),
            React.createElement(Spinner, { ...args, loading: false },
                React.createElement(Switch, { defaultChecked: true }))))),
};
//# sourceMappingURL=spinner.stories.js.map