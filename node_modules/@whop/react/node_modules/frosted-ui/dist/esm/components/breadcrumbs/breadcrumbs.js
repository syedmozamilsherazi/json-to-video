import classNames from 'classnames';
import { Slot } from 'radix-ui';
import * as React from 'react';
import { breadcrumbsPropDefs } from './breadcrumbs.props';
import { Button, DropdownMenu, Text } from '../';
import { ChevronRightIcon } from '../../icons';
const BreadcrumbsRoot = (props) => {
    const { className, children, asChild = false, color = breadcrumbsPropDefs.color.default, ...baseButtonProps } = props;
    const Comp = asChild ? Slot.Root : 'nav';
    const count = React.Children.count(children);
    return (React.createElement(Comp, { "data-accent-color": color, ...baseButtonProps, className: classNames('fui-BreadcrumbsRoot', className) }, React.Children.map(children, (child, index) => {
        const isLastItem = index === count - 1;
        const separator = React.createElement(ChevronRightIcon, { className: "fui-BreadcrumbsSeparator" });
        if (isLastItem && !child.props.onClick) {
            return (React.createElement(React.Fragment, null,
                index > 0 ? separator : null,
                React.createElement(Text, { as: "div", "data-accent-color": color, size: '1', children: child.props.children, className: classNames('fui-reset', 'fui-BreadcrumbsLastItem', child.props.className) })));
        }
        else {
            const breadcrumbChild = React.cloneElement(child, {
                color,
                ...child.props,
            });
            return (React.createElement(React.Fragment, null,
                index > 0 ? separator : null,
                breadcrumbChild));
        }
    })));
};
BreadcrumbsRoot.displayName = 'BreadcrumbsRoot';
const BreadcrumbsItem = (props) => (React.createElement(Button, { ...props, size: "1", variant: 'ghost', className: classNames('fui-BreadcrumbsItem', props.className) }));
BreadcrumbsItem.displayName = 'BreadcrumbsItem';
const BreadcrumbsDropdown = ({ color, ...props }) => (React.createElement(DropdownMenu.Root, null,
    React.createElement(DropdownMenu.Trigger, null,
        React.createElement(BreadcrumbsItem, { color: color }, "...")),
    React.createElement(DropdownMenu.Content, { ...props, size: "2", color: color }, props.children)));
BreadcrumbsDropdown.displayName = 'BreadcrumbsDropdown';
const BreadcrumbsDropdownItem = (props) => React.createElement(DropdownMenu.Item, { ...props });
BreadcrumbsDropdownItem.displayName = 'BreadcrumbsDropdownItem';
export { BreadcrumbsDropdown as Dropdown, BreadcrumbsDropdownItem as DropdownItem, BreadcrumbsItem as Item, BreadcrumbsRoot as Root, };
//# sourceMappingURL=breadcrumbs.js.map