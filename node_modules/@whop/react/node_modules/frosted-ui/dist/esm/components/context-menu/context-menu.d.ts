import { ContextMenu as ContextMenuPrimitive } from 'radix-ui';
import * as React from 'react';
import { contextMenuCheckboxItemPropDefs, contextMenuContentPropDefs, contextMenuItemPropDefs } from './context-menu.props';
import type { GetPropDefTypes, PropsWithoutColor } from '../../helpers';
interface ContextMenuRootProps extends React.ComponentProps<typeof ContextMenuPrimitive.Root> {
}
declare const ContextMenuRoot: React.FC<ContextMenuRootProps>;
interface ContextMenuTriggerProps extends Omit<React.ComponentProps<typeof ContextMenuPrimitive.Trigger>, 'asChild'> {
}
declare const ContextMenuTrigger: {
    (props: ContextMenuTriggerProps): React.JSX.Element;
    displayName: string;
};
type ContextMenuContentOwnProps = GetPropDefTypes<typeof contextMenuContentPropDefs>;
type ContextMenuContentContextValue = ContextMenuContentOwnProps;
interface ContextMenuContentProps extends PropsWithoutColor<typeof ContextMenuPrimitive.Content>, ContextMenuContentContextValue {
    container?: React.ComponentProps<typeof ContextMenuPrimitive.Portal>['container'];
}
declare const ContextMenuContent: {
    (props: ContextMenuContentProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuLabelProps extends PropsWithoutColor<typeof ContextMenuPrimitive.Label> {
}
declare const ContextMenuLabel: {
    (props: ContextMenuLabelProps): React.JSX.Element;
    displayName: string;
};
type ContextMenuItemOwnProps = GetPropDefTypes<typeof contextMenuItemPropDefs>;
interface ContextMenuItemProps extends PropsWithoutColor<typeof ContextMenuPrimitive.Item>, ContextMenuItemOwnProps {
}
declare const ContextMenuItem: {
    (props: ContextMenuItemProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuGroupProps extends React.ComponentProps<typeof ContextMenuPrimitive.Group> {
}
declare const ContextMenuGroup: {
    (props: ContextMenuGroupProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuRadioGroupProps extends React.ComponentProps<typeof ContextMenuPrimitive.RadioGroup> {
}
declare const ContextMenuRadioGroup: {
    (props: ContextMenuRadioGroupProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuRadioItemProps extends React.ComponentProps<typeof ContextMenuPrimitive.RadioItem> {
}
declare const ContextMenuRadioItem: {
    (props: ContextMenuRadioItemProps): React.JSX.Element;
    displayName: string;
};
type ContextMenuCheckboxItemOwnProps = GetPropDefTypes<typeof contextMenuCheckboxItemPropDefs>;
interface ContextMenuCheckboxItemProps extends React.ComponentProps<typeof ContextMenuPrimitive.CheckboxItem>, ContextMenuCheckboxItemOwnProps {
}
declare const ContextMenuCheckboxItem: {
    (props: ContextMenuCheckboxItemProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuSubProps extends React.ComponentProps<typeof ContextMenuPrimitive.Sub> {
}
declare const ContextMenuSub: React.FC<ContextMenuSubProps>;
interface ContextMenuSubTriggerProps extends React.ComponentProps<typeof ContextMenuPrimitive.SubTrigger> {
}
declare const ContextMenuSubTrigger: {
    (props: ContextMenuSubTriggerProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuSubContentProps extends React.ComponentProps<typeof ContextMenuPrimitive.SubContent> {
    container?: React.ComponentProps<typeof ContextMenuPrimitive.Portal>['container'];
}
declare const ContextMenuSubContent: {
    (props: ContextMenuSubContentProps): React.JSX.Element;
    displayName: string;
};
interface ContextMenuSeparatorProps extends React.ComponentProps<typeof ContextMenuPrimitive.Separator> {
}
declare const ContextMenuSeparator: {
    (props: ContextMenuSeparatorProps): React.JSX.Element;
    displayName: string;
};
export { ContextMenuCheckboxItem as CheckboxItem, ContextMenuContent as Content, ContextMenuGroup as Group, ContextMenuItem as Item, ContextMenuLabel as Label, ContextMenuRadioGroup as RadioGroup, ContextMenuRadioItem as RadioItem, ContextMenuRoot as Root, ContextMenuSeparator as Separator, ContextMenuSub as Sub, ContextMenuSubContent as SubContent, ContextMenuSubTrigger as SubTrigger, ContextMenuTrigger as Trigger, };
export type { ContextMenuCheckboxItemProps as CheckboxItemProps, ContextMenuContentProps as ContentProps, ContextMenuGroupProps as GroupProps, ContextMenuItemProps as ItemProps, ContextMenuLabelProps as LabelProps, ContextMenuRadioGroupProps as RadioGroupProps, ContextMenuRadioItemProps as RadioItemProps, ContextMenuRootProps as RootProps, ContextMenuSeparatorProps as SeparatorProps, ContextMenuSubContentProps as SubContentProps, ContextMenuSubProps as SubProps, ContextMenuSubTriggerProps as SubTriggerProps, ContextMenuTriggerProps as TriggerProps, };
