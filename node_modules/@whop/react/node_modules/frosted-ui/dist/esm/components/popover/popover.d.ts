import { Popover as PopoverPrimitive } from 'radix-ui';
import * as React from 'react';
import { popoverContentPropDefs } from './popover.props';
import type { GetPropDefTypes } from '../../helpers';
interface PopoverRootProps extends React.ComponentProps<typeof PopoverPrimitive.Root> {
}
declare const PopoverRoot: React.FC<PopoverRootProps>;
interface PopoverTriggerProps extends Omit<React.ComponentProps<typeof PopoverPrimitive.Trigger>, 'asChild'> {
}
declare const PopoverTrigger: {
    (props: PopoverTriggerProps): React.JSX.Element;
    displayName: string;
};
type PopoverContentOwnProps = GetPropDefTypes<typeof popoverContentPropDefs>;
interface PopoverContentProps extends Omit<React.ComponentProps<typeof PopoverPrimitive.Content>, 'asChild'>, PopoverContentOwnProps {
    container?: React.ComponentProps<typeof PopoverPrimitive.Portal>['container'];
}
declare const PopoverContent: {
    (props: PopoverContentProps): React.JSX.Element;
    displayName: string;
};
interface PopoverCloseProps extends Omit<React.ComponentProps<typeof PopoverPrimitive.Close>, 'asChild'> {
}
declare const PopoverClose: {
    (props: PopoverCloseProps): React.JSX.Element;
    displayName: string;
};
export { PopoverClose as Close, PopoverContent as Content, PopoverRoot as Root, PopoverTrigger as Trigger };
export type { PopoverCloseProps as CloseProps, PopoverContentProps as ContentProps, PopoverRootProps as RootProps, PopoverTriggerProps as TriggerProps, };
