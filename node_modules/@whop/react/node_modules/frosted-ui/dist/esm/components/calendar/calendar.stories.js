import { getLocalTimeZone, isWeekend, parseDate, today } from '@internationalized/date';
import { useLocale } from '@react-aria/i18n';
import React from 'react';
import { Calendar } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/Dates/Calendar',
    component: Calendar,
    args: {
        isDisabled: false,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {},
    render: (args) => (React.createElement("div", null,
        React.createElement(Calendar, { ...args, minValue: parseDate('1900-02-03'), defaultValue: parseDate('2020-02-03'), onChange: (date) => console.log(date.toString()) }))),
};
export const Disabled = {
    args: {},
    render: (args) => (React.createElement("div", null,
        React.createElement(Calendar, { ...args, isDisabled: true, defaultValue: parseDate('2020-02-03'), onChange: (date) => console.log(date.toString()) }))),
};
export const UnavailableDates = {
    name: 'Unavailable Dates',
    args: {},
    render: (args) => {
        const now = today(getLocalTimeZone());
        const disabledRanges = [
            [now, now.add({ days: 5 })],
            [now.add({ days: 14 }), now.add({ days: 16 })],
            [now.add({ days: 23 }), now.add({ days: 24 })],
        ];
        const { locale } = useLocale();
        const isDateUnavailable = (date) => isWeekend(date, locale) ||
            disabledRanges.some((interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0);
        return (React.createElement("div", { style: { width: 300 } },
            React.createElement(Calendar, { ...args, "aria-label": "Appointment date", minValue: today(getLocalTimeZone()), isDateUnavailable: isDateUnavailable })));
    },
};
//# sourceMappingURL=calendar.stories.js.map