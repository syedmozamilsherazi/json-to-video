'use client';
import * as React from 'react';
import { Drawer as DrawerPrimitive } from 'vaul';
import classNames from 'classnames';
import { Theme } from '../../theme';
import { Heading } from '../heading';
import { Text } from '../text';
const SheetRoot = ({ ...props }) => React.createElement(DrawerPrimitive.Root, { ...props });
SheetRoot.displayName = 'SheetRoot';
const SheetNestedRoot = ({ ...props }) => React.createElement(DrawerPrimitive.NestedRoot, { ...props });
SheetNestedRoot.displayName = 'SheetNestedRoot';
const SheetTrigger = (props) => React.createElement(DrawerPrimitive.Trigger, { ...props, asChild: true });
SheetTrigger.displayName = 'SheetTrigger';
const SheetClose = (props) => React.createElement(DrawerPrimitive.Close, { ...props, asChild: true });
SheetClose.displayName = 'SheetClose';
const SheetPortal = DrawerPrimitive.Portal;
const SheetOverlay = ({ className, ...props }) => (React.createElement(DrawerPrimitive.Overlay, { className: classNames('fui-SheetOverlay', className), ...props }));
SheetOverlay.displayName = 'SheetOverlay';
const SheetContent = ({ className, children, ...props }) => (React.createElement(SheetPortal, null,
    React.createElement(React.Fragment, null,
        React.createElement(Theme, { asChild: true },
            React.createElement(SheetOverlay, null)),
        React.createElement(Theme, { asChild: true },
            React.createElement(DrawerPrimitive.Content, { className: classNames('fui-SheetContent', className), ...props },
                React.createElement("div", { className: "fui-SheetContentHandle" }),
                children)))));
SheetContent.displayName = 'SheetContent';
const SheetHeader = ({ children, className, ...props }) => (React.createElement("div", { className: classNames('fui-SheetHeader', className), ...props }, children));
SheetHeader.displayName = 'SheetHeader';
const SheetBody = ({ children, className, ...props }) => (React.createElement("div", { className: classNames('fui-SheetBody', className), ...props }, children));
SheetBody.displayName = 'SheetBody';
const SheetFooter = ({ className, ...props }) => (React.createElement("div", { className: classNames('fui-SheetFooter', className), ...props }));
SheetFooter.displayName = 'SheetFooter';
const SheetTitle = ({ size = '5', weight = 'bold', ...props }) => {
    return (React.createElement(DrawerPrimitive.Title, { asChild: true },
        React.createElement(Heading, { weight: weight, size: size, ...props })));
};
SheetTitle.displayName = 'SheetTitle';
const SheetDescription = ({ size = '3', weight = 'regular', ...props }) => {
    return (React.createElement(DrawerPrimitive.Description, { asChild: true },
        React.createElement(Text, { as: "p", size: size, weight: weight, ...props })));
};
SheetDescription.displayName = 'SheetDescription';
export { SheetBody as Body, SheetClose as Close, SheetContent as Content, SheetDescription as Description, SheetHeader as Header, SheetNestedRoot as NestedRoot, SheetRoot as Root, SheetTitle as Title, SheetTrigger as Trigger, };
//# sourceMappingURL=sheet.js.map