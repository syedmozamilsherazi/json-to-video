'use client';
import classNames from 'classnames';
import { Popover as PopoverPrimitive } from 'radix-ui';
import * as React from 'react';
import { Theme } from '../../theme';
import { popoverContentPropDefs } from './popover.props';
const PopoverRoot = (props) => React.createElement(PopoverPrimitive.Root, { ...props });
PopoverRoot.displayName = 'PopoverRoot';
const PopoverTrigger = (props) => React.createElement(PopoverPrimitive.Trigger, { ...props, asChild: true });
PopoverTrigger.displayName = 'PopoverTrigger';
const PopoverContent = (props) => {
    const { className, forceMount, container, size = popoverContentPropDefs.size.default, variant = popoverContentPropDefs.variant.default, ...contentProps } = props;
    return (React.createElement(PopoverPrimitive.Portal, { container: container, forceMount: forceMount },
        React.createElement(Theme, { asChild: true },
            React.createElement(PopoverPrimitive.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...contentProps, className: classNames('fui-PopperContent', 'fui-PopoverContent', `fui-variant-${variant}`, className, `fui-r-size-${size}`) }))));
};
PopoverContent.displayName = 'PopoverContent';
const PopoverClose = (props) => React.createElement(PopoverPrimitive.Close, { ...props, asChild: true });
PopoverClose.displayName = 'PopoverClose';
export { PopoverClose as Close, PopoverContent as Content, PopoverRoot as Root, PopoverTrigger as Trigger };
//# sourceMappingURL=popover.js.map