import React from 'react';
import { Separator, Text, separatorPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Layout/Separator',
    component: Separator,
    args: {
        size: separatorPropDefs.size.default,
        color: separatorPropDefs.color.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    render: (args) => (React.createElement(Text, { size: "2" },
        "Tools for building high-quality, accessible UI.",
        React.createElement(Separator, { ...args, orientation: "horizontal", size: "4", style: { margin: 'var(--space-3) 0' } }),
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', alignItems: 'center' } },
            "Themes",
            React.createElement(Separator, { ...args, orientation: "vertical" }),
            "Primitives",
            React.createElement(Separator, { ...args, orientation: "vertical" }),
            "Icons",
            React.createElement(Separator, { ...args, orientation: "vertical" }),
            "Colors"))),
};
export const Size = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-6)' } },
        React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)' } },
            React.createElement(Separator, { ...args, orientation: "horizontal", size: "4" }),
            React.createElement(Separator, { ...args, orientation: "horizontal", size: "3" }),
            React.createElement(Separator, { ...args, orientation: "horizontal", size: "2" }),
            React.createElement(Separator, { ...args, orientation: "horizontal", size: "1" })),
        React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-4)', height: 96 } },
            React.createElement(Separator, { ...args, orientation: "vertical", size: "4" }),
            React.createElement(Separator, { ...args, orientation: "vertical", size: "3" }),
            React.createElement(Separator, { ...args, orientation: "vertical", size: "2" }),
            React.createElement(Separator, { ...args, orientation: "vertical", size: "1" })))),
};
export const Color = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
        React.createElement(Separator, { ...args, color: "indigo", size: "3" }),
        React.createElement(Separator, { ...args, color: "cyan", size: "3" }),
        React.createElement(Separator, { ...args, color: "orange", size: "3" }),
        React.createElement(Separator, { ...args, color: "crimson", size: "3" }))),
};
export const Orientation = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-4)' } },
        React.createElement(Separator, { ...args, orientation: "horizontal" }),
        React.createElement(Separator, { ...args, orientation: "vertical" }))),
};
//# sourceMappingURL=separator.stories.js.map