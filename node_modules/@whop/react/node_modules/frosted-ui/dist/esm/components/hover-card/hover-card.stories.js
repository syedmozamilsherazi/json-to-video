import React from 'react';
import { Avatar, Heading, HoverCard, Inset, Link, Strong, Text, hoverCardContentPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/HoverCard',
    component: HoverCard.Content,
    args: {},
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {
        size: hoverCardContentPropDefs.size.default,
        variant: hoverCardContentPropDefs.variant.default,
    },
    render: (args) => (React.createElement(Text, null,
        "Follow",
        ' ',
        React.createElement(HoverCard.Root, null,
            React.createElement(HoverCard.Trigger, null,
                React.createElement(Link, { href: "https://github.com/whopio/frosted-ui", target: "_blank" }, "frosted-ui")),
            React.createElement(HoverCard.Content, { ...args },
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-4)' } },
                    React.createElement(Avatar, { size: "3", fallback: "FUI" }),
                    React.createElement("div", null,
                        React.createElement(Heading, { size: "3", as: "h3" }, "Frosted UI"),
                        React.createElement(Text, { as: "div", size: "2", color: "gray" }, "frosted-ui"),
                        React.createElement(Text, { as: "div", size: "2", style: { maxWidth: 300, marginTop: 'var(--space-3)' } }, "React components library built on top of Radix Themes."))))),
        ' ',
        "for updates.")),
};
export const Size = {
    args: {
        variant: hoverCardContentPropDefs.variant.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-4)' } },
        React.createElement(HoverCard.Root, null,
            React.createElement(HoverCard.Trigger, null,
                React.createElement(Link, { href: "#" }, "Size one")),
            React.createElement(HoverCard.Content, { ...args, size: "1" },
                React.createElement(Text, { as: "div", size: "1", style: { maxWidth: 325 } },
                    React.createElement(Strong, null, "Typography"),
                    " is the art and technique of arranging type to make written language legible, readable and appealing when displayed."))),
        React.createElement(HoverCard.Root, null,
            React.createElement(HoverCard.Trigger, null,
                React.createElement(Link, { href: "#" }, "Size two")),
            React.createElement(HoverCard.Content, { ...args, size: "2" },
                React.createElement(Text, { as: "div", size: "2", style: { maxWidth: 350 } },
                    React.createElement(Strong, null, "Typography"),
                    " is the art and technique of arranging type to make written language legible, readable and appealing when displayed."))),
        React.createElement(HoverCard.Root, null,
            React.createElement(HoverCard.Trigger, null,
                React.createElement(Link, { href: "#" }, "Size three")),
            React.createElement(HoverCard.Content, { ...args, size: "3" },
                React.createElement(Text, { as: "div", size: "3", style: { maxWidth: 400 } },
                    React.createElement(Strong, null, "Typography"),
                    " is the art and technique of arranging type to make written language legible, readable and appealing when displayed."))))),
};
export const InsetContent = {
    name: 'With inset content',
    args: {
        size: hoverCardContentPropDefs.size.default,
        variant: hoverCardContentPropDefs.variant.default,
    },
    render: (args) => (React.createElement(Text, null,
        "Technology revolutionized",
        ' ',
        React.createElement(HoverCard.Root, null,
            React.createElement(HoverCard.Trigger, null,
                React.createElement(Link, { href: "#" }, "typography")),
            React.createElement(HoverCard.Content, { ...args },
                React.createElement("div", { style: { display: 'flex' } },
                    React.createElement(Inset, { side: "left", pr: "current" },
                        React.createElement("img", { src: "https://images.unsplash.com/photo-1617050318658-a9a3175e34cb?&auto=format&fit=crop&w=300&q=80", alt: "Bold typography", style: {
                                display: 'block',
                                objectFit: 'cover',
                                height: '100%',
                                width: 150,
                                backgroundColor: 'var(--gray-5)',
                            } })),
                    React.createElement(Text, { size: "2", style: { maxWidth: 250 }, as: "p" },
                        React.createElement(Strong, null, "Typography"),
                        " is the art and technique of arranging type to make written language legible, readable and appealing when displayed. The arrangement of type involves selecting typefaces, point sizes, line lengths, line-spacing (leading), and letter-spacing (tracking)\u2026")))),
        ' ',
        "in the latter twentieth century.")),
};
//# sourceMappingURL=hover-card.stories.js.map