import { Accordion as AccordionPrimitive } from 'radix-ui';
import * as React from 'react';
import type { PropsWithoutColor } from '../../helpers';
type AccordionRootProps = React.ComponentProps<typeof AccordionPrimitive.Root>;
declare const AccordionRoot: {
    (props: AccordionRootProps): React.JSX.Element;
    displayName: string;
};
interface AccordionItemProps extends PropsWithoutColor<typeof AccordionPrimitive.Item> {
}
declare const AccordionItem: {
    (props: AccordionItemProps): React.JSX.Element;
    displayName: string;
};
type AccordionTriggerProps = React.ComponentProps<typeof AccordionPrimitive.Trigger>;
declare const AccordionTrigger: {
    (props: AccordionTriggerProps): React.JSX.Element;
    displayName: string;
};
type AccordionContentProps = React.ComponentProps<typeof AccordionPrimitive.Content>;
declare const AccordionContent: {
    ({ className, children, ...props }: AccordionContentProps): React.JSX.Element;
    displayName: string;
};
export { AccordionContent as Content, AccordionItem as Item, AccordionRoot as Root, AccordionTrigger as Trigger };
export type { AccordionContentProps as ContentProps, AccordionItemProps as ItemProps, AccordionRootProps as RootProps, AccordionTriggerProps as TriggerProps, };
