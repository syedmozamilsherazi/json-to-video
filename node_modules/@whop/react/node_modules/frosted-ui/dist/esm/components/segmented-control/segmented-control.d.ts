import { Tabs as TabsPrimitive } from 'radix-ui';
import * as React from 'react';
interface SegmentedControlRootProps extends React.ComponentProps<typeof TabsPrimitive.Root> {
}
declare const SegmentedControlRoot: {
    (props: SegmentedControlRootProps): React.JSX.Element;
    displayName: string;
};
interface SegmentedControlListOwnProps extends React.ComponentProps<'div'> {
}
interface SegmentedControlListProps extends React.ComponentProps<typeof TabsPrimitive.List>, SegmentedControlListOwnProps {
}
declare const SegmentedControlList: {
    (props: SegmentedControlListProps): React.JSX.Element;
    displayName: string;
};
interface SegmentedControlTriggerProps extends React.ComponentProps<typeof TabsPrimitive.Trigger> {
}
declare const SegmentedControlTrigger: {
    (props: SegmentedControlTriggerProps): React.JSX.Element;
    displayName: string;
};
interface SegmentedControlContentProps extends React.ComponentProps<typeof TabsPrimitive.Content> {
}
declare const SegmentedControlContent: {
    (props: SegmentedControlContentProps): React.JSX.Element;
    displayName: string;
};
export { SegmentedControlContent as Content, SegmentedControlList as List, SegmentedControlRoot as Root, SegmentedControlTrigger as Trigger, };
export type { SegmentedControlContentProps as ContentProps, SegmentedControlListProps as ListProps, SegmentedControlRootProps as RootProps, SegmentedControlTriggerProps as TriggerProps, };
