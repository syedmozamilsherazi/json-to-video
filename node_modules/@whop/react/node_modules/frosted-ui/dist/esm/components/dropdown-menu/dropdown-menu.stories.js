import React from 'react';
import { Button, DropdownMenu, dropdownMenuContentPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/DropdownMenu',
    component: DropdownMenu.Content,
    args: {},
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
export const Default = {
    args: {
        size: dropdownMenuContentPropDefs.size.default,
        variant: dropdownMenuContentPropDefs.variant.default,
    },
    render: (args) => {
        const [order, setOrder] = React.useState('ascending');
        const [showHiddenFiles, setShowHiddenFiles] = React.useState(true);
        return (React.createElement(DropdownMenu.Root, null,
            React.createElement(DropdownMenu.Trigger, null,
                React.createElement(Button, { variant: "soft" }, "Options")),
            React.createElement(DropdownMenu.Content, { ...args },
                React.createElement(DropdownMenu.Label, null, "Swag"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 E" }, "Edit"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 D" }, "Duplicate"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 N" }, "Archive"),
                React.createElement(DropdownMenu.Sub, null,
                    React.createElement(DropdownMenu.SubTrigger, null, "More"),
                    React.createElement(DropdownMenu.SubContent, null,
                        React.createElement(DropdownMenu.Item, null, "Move to project\u2026"),
                        React.createElement(DropdownMenu.Item, null, "Move to folder\u2026"),
                        React.createElement(DropdownMenu.Separator, null),
                        React.createElement(DropdownMenu.Item, null, "Advanced options\u2026"))),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.RadioGroup, { value: order, onValueChange: (value) => setOrder(value) },
                    React.createElement(DropdownMenu.RadioItem, { value: "ascending" }, "Ascending"),
                    React.createElement(DropdownMenu.RadioItem, { value: "descending" }, "Descending")),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.CheckboxItem, { checked: showHiddenFiles, onCheckedChange: setShowHiddenFiles, shortcut: "S+ H" }, "Show hidden files"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 \u232B", color: "danger" }, "Delete"))));
    },
};
export const Size = {
    args: {
        variant: dropdownMenuContentPropDefs.variant.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', alignItems: 'center' } },
        React.createElement(DropdownMenu.Root, null,
            React.createElement(DropdownMenu.Trigger, null,
                React.createElement(Button, { variant: "soft", size: "3" }, "Large")),
            React.createElement(DropdownMenu.Content, { ...args, size: "3" },
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 E" }, "Edit"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 D" }, "Duplicate"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 N" }, "Archive"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 \u232B", color: "danger" }, "Delete"))),
        React.createElement(DropdownMenu.Root, null,
            React.createElement(DropdownMenu.Trigger, null,
                React.createElement(Button, { variant: "soft", size: "2" }, "Default")),
            React.createElement(DropdownMenu.Content, { ...args, size: "2" },
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 E" }, "Edit"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 D" }, "Duplicate"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 N" }, "Archive"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 \u232B", color: "danger" }, "Delete"))),
        React.createElement(DropdownMenu.Root, null,
            React.createElement(DropdownMenu.Trigger, null,
                React.createElement(Button, { variant: "soft", size: "1" }, "Small")),
            React.createElement(DropdownMenu.Content, { ...args, size: "1" },
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 E" }, "Edit"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 D" }, "Duplicate"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 N" }, "Archive"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 \u232B", color: "danger" }, "Delete"))))),
};
export const Color = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)' } },
        React.createElement(DropdownMenu.Root, null,
            React.createElement(DropdownMenu.Trigger, null,
                React.createElement(Button, { variant: "soft", color: "gray" }, "Options")),
            React.createElement(DropdownMenu.Content, { ...args },
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 E", color: "info" }, "Edit"),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 D", color: "success" }, "Duplicate"),
                React.createElement(DropdownMenu.Separator, null),
                React.createElement(DropdownMenu.Item, { shortcut: "\u2318 N", color: "danger" }, "Archive"))))),
};
//# sourceMappingURL=dropdown-menu.stories.js.map