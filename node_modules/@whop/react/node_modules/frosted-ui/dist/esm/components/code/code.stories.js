import React from 'react';
import { Code, codePropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Typography/Code',
    component: Code,
    args: {
        children: 'Code',
        size: codePropDefs.size.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {
        children: 'Code',
        size: codePropDefs.size.default,
    },
};
export const Variant = {
    args: {
        size: codePropDefs.size.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', alignItems: 'start', gap: 'var(--space-2)' } },
        React.createElement(Code, { ...args, variant: "solid" }, "console.log()"),
        React.createElement(Code, { ...args, variant: "soft" }, "console.log()"),
        React.createElement(Code, { ...args, variant: "outline" }, "console.log()"),
        React.createElement(Code, { ...args, variant: "ghost" }, "console.log()"))),
};
export const Size = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
        React.createElement(Code, { ...args, size: "1" }, "console.log()"),
        React.createElement(Code, { ...args, size: "2" }, "console.log()"),
        React.createElement(Code, { ...args, size: "3" }, "console.log()"),
        React.createElement(Code, { ...args, size: "4" }, "console.log()"),
        React.createElement(Code, { ...args, size: "5" }, "console.log()"),
        React.createElement(Code, { ...args, size: "6" }, "console.log()"),
        React.createElement(Code, { ...args, size: "7" }, "console.log()"),
        React.createElement(Code, { ...args, size: "8" }, "console.log()"),
        React.createElement(Code, { ...args, size: "9" }, "console.log()"))),
};
export const Color = {
    args: {
        size: codePropDefs.size.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', alignItems: 'start', gap: 'var(--space-2)' } },
        React.createElement(Code, { ...args, color: "indigo" }, "console.log()"),
        React.createElement(Code, { ...args, color: "crimson" }, "console.log()"),
        React.createElement(Code, { ...args, color: "cyan" }, "console.log()"),
        React.createElement(Code, { ...args, color: "orange" }, "console.log()"))),
};
export const HighContrast = {
    name: 'High Contrast',
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)' } },
        React.createElement("div", { style: { display: 'flex', flexDirection: 'column', alignItems: 'start', gap: 'var(--space-2)' } },
            React.createElement(Code, { ...args, variant: "solid" }, "console.log()"),
            React.createElement(Code, { ...args, variant: "soft" }, "console.log()"),
            React.createElement(Code, { ...args, variant: "outline" }, "console.log()"),
            React.createElement(Code, { ...args, variant: "ghost" }, "console.log()")),
        React.createElement("div", { style: { display: 'flex', flexDirection: 'column', alignItems: 'start', gap: 'var(--space-2)' } },
            React.createElement(Code, { ...args, variant: "solid", highContrast: true }, "console.log()"),
            React.createElement(Code, { ...args, variant: "soft", highContrast: true }, "console.log()"),
            React.createElement(Code, { ...args, variant: "outline", highContrast: true }, "console.log()"),
            React.createElement(Code, { ...args, variant: "ghost", highContrast: true }, "console.log()")))),
};
//# sourceMappingURL=code.stories.js.map