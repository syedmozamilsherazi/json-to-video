import React from 'react';
import { Switch, Text, switchPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/Switch',
    component: Switch,
    args: {
        disabled: false,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {
        size: switchPropDefs.size.default,
        color: switchPropDefs.color.default,
        highContrast: switchPropDefs.highContrast.default,
    },
};
export const Size = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Switch, { ...args, size: "1", defaultChecked: true }),
        React.createElement(Switch, { ...args, size: "2", defaultChecked: true }),
        React.createElement(Switch, { ...args, size: "3", defaultChecked: true }))),
};
export const Color = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Switch, { ...args, color: "indigo", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "cyan", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "orange", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "crimson", defaultChecked: true }))),
};
export const HighContrast = {
    name: 'High Contrast',
    render: (args) => (React.createElement("div", { style: {
            display: 'inline-grid',
            gridTemplateRows: 'repeat(2, 1fr)',
            gap: 'var(--space-2)',
            gridAutoFlow: 'column',
        } },
        React.createElement(Switch, { ...args, color: "indigo", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "indigo", defaultChecked: true, highContrast: true }),
        React.createElement(Switch, { ...args, color: "cyan", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "cyan", defaultChecked: true, highContrast: true }),
        React.createElement(Switch, { ...args, color: "orange", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "orange", defaultChecked: true, highContrast: true }),
        React.createElement(Switch, { ...args, color: "crimson", defaultChecked: true }),
        React.createElement(Switch, { ...args, color: "crimson", defaultChecked: true, highContrast: true }))),
};
export const Alignment = {
    name: 'Alignment with text',
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
        React.createElement(Text, { as: "label", size: "2" },
            React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                React.createElement(Switch, { ...args, size: "1", defaultChecked: true }),
                " Sync settings")),
        React.createElement(Text, { as: "label", size: "3" },
            React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                React.createElement(Switch, { ...args, size: "2", defaultChecked: true }),
                " Sync settings")),
        React.createElement(Text, { as: "label", size: "4" },
            React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
                React.createElement(Switch, { ...args, size: "3", defaultChecked: true }),
                " Sync settings")))),
};
//# sourceMappingURL=switch.stories.js.map