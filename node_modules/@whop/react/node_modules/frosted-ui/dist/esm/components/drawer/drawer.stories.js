import React from 'react';
import { XMark16 } from '@frosted-ui/icons';
import { Badge, Button, Checkbox, Drawer, IconButton, Inset, ScrollArea, Table, Text, TextField } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/Drawer',
    component: Drawer.Content,
    args: {},
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    render: (args) => (React.createElement(Drawer.Root, null,
        React.createElement(Drawer.Trigger, null,
            React.createElement(Button, null, "Edit profile")),
        React.createElement(Drawer.Content, { ...args, onOpenAutoFocus: (e) => e.preventDefault() },
            React.createElement(Drawer.Header, null,
                React.createElement(Drawer.Title, null, "Edit profile"),
                React.createElement(Drawer.Close, null,
                    React.createElement(IconButton, { size: "1", color: "gray", variant: "ghost" },
                        React.createElement(XMark16, null)))),
            React.createElement(Drawer.Body, null,
                React.createElement(Text, { as: "p", size: "2", style: { marginBottom: 'var(--space-4)' } }, "Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes"),
                React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
                    React.createElement("label", null,
                        React.createElement(Text, { as: "div", size: "2", style: { marginBottom: 'var(--space-1)' }, weight: "bold" }, "Name"),
                        React.createElement(TextField.Input, { defaultValue: "Freja Johnsen", placeholder: "Enter your full name" })),
                    React.createElement("label", null,
                        React.createElement(Text, { as: "div", size: "2", style: { marginBottom: 'var(--space-1)' }, weight: "bold" }, "Email"),
                        React.createElement(TextField.Input, { defaultValue: "freja@example.com", placeholder: "Enter your email" }))),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', marginTop: 'var(--space-4)', justifyContent: 'flex-end' } },
                    React.createElement(Drawer.Close, null,
                        React.createElement(Button, { variant: "soft", color: "gray", onClick: () => alert('Cancel') }, "Cancel")),
                    React.createElement(Drawer.Close, null,
                        React.createElement(Button, { onClick: () => alert('Save') }, "Save")))),
            React.createElement(Drawer.StickyFooter, null,
                React.createElement(Drawer.Close, null,
                    React.createElement(Button, { variant: "classic", color: "lime", size: "4", style: { width: '100%' } }, "Subscribe")))))),
};
export const InsetContent = {
    name: 'With inset content',
    render: (args) => (React.createElement(Drawer.Root, null,
        React.createElement(Drawer.Trigger, null,
            React.createElement(Button, null, "View users")),
        React.createElement(Drawer.Content, { style: { maxWidth: 540 }, ...args },
            React.createElement(Drawer.Header, null,
                React.createElement(Drawer.Title, null, "Users"),
                React.createElement(Drawer.Close, null,
                    React.createElement(IconButton, { size: "1", color: "gray", variant: "ghost" },
                        React.createElement(XMark16, null)))),
            React.createElement(Drawer.Body, null,
                React.createElement(Text, { as: "p" }, "The following users have access to this project."),
                React.createElement(Inset, { side: "x", style: { marginTop: 'var(--space-5)', marginBottom: 'var(--space-5)' } },
                    React.createElement(Table.Root, { variant: "ghost" },
                        React.createElement(ScrollArea, { scrollbars: "horizontal" },
                            React.createElement(Table.Table, null,
                                React.createElement(Table.Header, null,
                                    React.createElement(Table.Row, null,
                                        React.createElement(Table.ColumnHeaderCell, null,
                                            React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                React.createElement(Checkbox, null),
                                                "Full name")),
                                        React.createElement(Table.ColumnHeaderCell, null, "Email"),
                                        React.createElement(Table.ColumnHeaderCell, null, "Group"))),
                                React.createElement(Table.Body, null,
                                    React.createElement(Table.Row, null,
                                        React.createElement(Table.RowHeaderCell, null,
                                            React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                React.createElement(Checkbox, null),
                                                "Danilo Sousa")),
                                        React.createElement(Table.Cell, null, "danilo@example.com"),
                                        React.createElement(Table.Cell, null,
                                            React.createElement(Badge, { color: "green" }, "Developer"))),
                                    React.createElement(Table.Row, null,
                                        React.createElement(Table.RowHeaderCell, null,
                                            React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                React.createElement(Checkbox, null),
                                                "Zahra Ambessa")),
                                        React.createElement(Table.Cell, null, "zahra@example.com"),
                                        React.createElement(Table.Cell, null,
                                            React.createElement(Badge, { color: "amber" }, "Admin"))),
                                    React.createElement(Table.Row, null,
                                        React.createElement(Table.RowHeaderCell, null,
                                            React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                React.createElement(Checkbox, null),
                                                "Jasper Eriksson")),
                                        React.createElement(Table.Cell, null, "jasper@example.com"),
                                        React.createElement(Table.Cell, null,
                                            React.createElement(Badge, { color: "green" }, "Developer")))))))),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', justifyContent: 'flex-end' } },
                    React.createElement(Drawer.Close, null,
                        React.createElement(Button, { variant: "soft", color: "gray" }, "Close"))))))),
};
//# sourceMappingURL=drawer.stories.js.map