import classNames from 'classnames';
import * as React from 'react';
import { Text } from '../text';
import { dataListItemPropDefs, dataListLabelPropDefs, dataListRootPropDefs } from './data-list.props';
const DataListRoot = (props) => {
    const { className, size = dataListRootPropDefs.size.default, trim = dataListRootPropDefs.trim.default, orientation = dataListRootPropDefs.orientation.default, ...dataListProps } = props;
    return (React.createElement(Text, { asChild: true },
        React.createElement("dl", { ...dataListProps, className: classNames('fui-DataListRoot', `fui-r-size-${size}`, `fui-r-lt-${trim}`, `fui-r-orientation-${orientation}`, className) })));
};
DataListRoot.displayName = 'DataList.Root';
const DataListItem = (props) => {
    const { className, align = dataListItemPropDefs.align.default, ...dataListItemProps } = props;
    return (React.createElement("div", { ...dataListItemProps, className: classNames('fui-DataListItem', align ? `fui-r-ai-${align}` : undefined, className) }));
};
DataListItem.displayName = 'DataList.Item';
const DataListLabel = (props) => {
    const { className, color = dataListLabelPropDefs.color.default, highContrast = dataListLabelPropDefs.highContrast.default, ...dataListLabelProps } = props;
    return (React.createElement("dt", { ...dataListLabelProps, "data-accent-color": color, className: classNames('fui-DataListLabel', { 'fui-high-contrast': highContrast }, className) }));
};
DataListLabel.displayName = 'DataList.Label';
const DataListValue = ({ children, className, ...props }) => (React.createElement("dd", { ...props, className: classNames(className, 'fui-DataListValue') }, children));
DataListValue.displayName = 'DataList.Value';
export { DataListItem as Item, DataListLabel as Label, DataListRoot as Root, DataListValue as Value };
//# sourceMappingURL=data-list.js.map