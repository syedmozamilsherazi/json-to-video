import React from 'react';
import { Badge, badgePropDefs } from '../../../src/components';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/Badge',
    component: Badge,
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {
        children: 'Badge',
        size: badgePropDefs.size.default,
        variant: badgePropDefs.variant.default,
        color: badgePropDefs.color.default,
    },
};
export const Size = {
    args: {
        children: 'Badge',
        size: badgePropDefs.size.default,
        variant: badgePropDefs.variant.default,
        color: badgePropDefs.color.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Badge, { ...args, size: "2" }),
        React.createElement(Badge, { ...args, size: "1" }))),
};
export const Variant = {
    args: {
        children: 'Badge',
        size: badgePropDefs.size.default,
        color: badgePropDefs.color.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Badge, { ...args, variant: "solid" }),
        React.createElement(Badge, { ...args, variant: "soft" }),
        React.createElement(Badge, { ...args, variant: "outline" }),
        React.createElement(Badge, { ...args, variant: "surface" }))),
};
export const Color = {
    args: {
        children: 'Badge',
        size: badgePropDefs.size.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Badge, { ...args, color: "indigo" }),
        React.createElement(Badge, { ...args, color: "cyan" }),
        React.createElement(Badge, { ...args, color: "orange" }),
        React.createElement(Badge, { ...args, color: "crimson" }))),
};
export const SemanticColor = {
    name: 'Semantic color',
    args: {
        size: badgePropDefs.size.default,
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
        React.createElement(Badge, { ...args, color: "info" }, "Info"),
        React.createElement(Badge, { ...args, color: "success" }, "Success"),
        React.createElement(Badge, { ...args, color: "warning" }, "Warning"),
        React.createElement(Badge, { ...args, color: "danger" }, "Danger"))),
};
export const HighContrast = {
    name: 'High Contrast',
    args: {
        children: 'Badge',
    },
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-2)' } },
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
            React.createElement(Badge, { ...args, highContrast: false, variant: "solid" }),
            React.createElement(Badge, { ...args, highContrast: false, variant: "soft" }),
            React.createElement(Badge, { ...args, highContrast: false, variant: "outline" }),
            React.createElement(Badge, { ...args, highContrast: false, variant: "surface" })),
        React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
            React.createElement(Badge, { ...args, variant: "solid", highContrast: true }),
            React.createElement(Badge, { ...args, variant: "soft", highContrast: true }),
            React.createElement(Badge, { ...args, variant: "outline", highContrast: true }),
            React.createElement(Badge, { ...args, variant: "surface", highContrast: true })))),
};
//# sourceMappingURL=badge.stories.js.map