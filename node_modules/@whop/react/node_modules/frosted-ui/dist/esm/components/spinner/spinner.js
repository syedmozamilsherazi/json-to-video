import classNames from 'classnames';
import * as React from 'react';
import { spinnerPropDefs } from './spinner.props';
const Spinner = (props) => {
    const { children, className, loading = spinnerPropDefs.loading.default, size = spinnerPropDefs.size.default, ...spinnerProps } = props;
    if (!loading)
        return children;
    const spinner = (React.createElement("span", { ...spinnerProps, className: classNames('fui-Spinner', `fui-r-size-${size}`, className) },
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" }),
        React.createElement("span", { className: "fui-SpinnerLeaf" })));
    if (children === undefined)
        return spinner;
    return (React.createElement("span", { style: {
            position: 'relative',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
        } },
        React.createElement("span", { "aria-hidden": true, style: { display: 'contents', visibility: 'hidden' }, inert: true }, children),
        React.createElement("span", { style: {
                position: 'absolute',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                inset: '0',
            } }, spinner)));
};
Spinner.displayName = 'Spinner';
export { Spinner };
//# sourceMappingURL=spinner.js.map