import { getLocalTimeZone, parseDate, parseZonedDateTime, today } from '@internationalized/date';
import React from 'react';
import { DateField, dateFieldPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/Dates/DateField',
    component: DateField,
    args: {
        size: dateFieldPropDefs.size.default,
        color: dateFieldPropDefs.color.default,
        'aria-label': 'Birth date',
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    args: {},
    render: (args) => (React.createElement("div", { style: { width: 300 } },
        React.createElement(DateField, { ...args, defaultValue: parseDate('2020-02-03'), onChange: (date) => console.log(date === null || date === void 0 ? void 0 : date.toString()) }))),
};
export const Size = {
    args: {},
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)', width: 300 } },
        React.createElement(DateField, { ...args, defaultValue: parseDate('2020-02-03'), size: "1" }),
        React.createElement(DateField, { ...args, defaultValue: parseDate('2020-02-03'), size: "2" }),
        React.createElement(DateField, { ...args, defaultValue: parseDate('2020-02-03'), size: "3" }))),
};
export const MinValue = {
    args: {},
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)', width: 300 } },
        React.createElement(DateField, { ...args, minValue: today(getLocalTimeZone()), defaultValue: parseDate('2020-02-03'), validationBehavior: "aria" }))),
};
export const WithTime = {
    name: 'With time',
    args: {},
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)', width: 300 } },
        React.createElement(DateField, { ...args, defaultValue: parseZonedDateTime('2022-11-07T00:45[America/Los_Angeles]') }),
        React.createElement(DateField, { ...args, defaultValue: parseZonedDateTime('2022-11-07T00:45[America/Los_Angeles]'), hideTimeZone: true }),
        React.createElement(DateField, { ...args, defaultValue: parseZonedDateTime('2022-11-07T00:45[America/Los_Angeles]'), hideTimeZone: true, granularity: "second" }))),
};
//# sourceMappingURL=date-field.stories.js.map