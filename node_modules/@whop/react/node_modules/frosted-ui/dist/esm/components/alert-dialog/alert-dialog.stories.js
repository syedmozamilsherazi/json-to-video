import React from 'react';
import { AlertDialog, Button, Code, Inset, Table, Text, alertDialogContentPropDefs } from '..';
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/AlertDialog',
    component: AlertDialog.Content,
    args: {
        size: alertDialogContentPropDefs.size.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
export default meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Default = {
    render: (args) => (React.createElement(AlertDialog.Root, null,
        React.createElement(AlertDialog.Trigger, null,
            React.createElement(Button, { variant: "classic", color: "red" }, "Revoke access")),
        React.createElement(AlertDialog.Content, { style: { maxWidth: 450 }, ...args },
            React.createElement(AlertDialog.Title, null, "Revoke access"),
            React.createElement(AlertDialog.Description, null, "Are you sure? This application will no longer be accessible and any existing sessions will be expired."),
            React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', marginTop: 'var(--space-4)', justifyContent: 'flex-end' } },
                React.createElement(AlertDialog.Cancel, null,
                    React.createElement(Button, { variant: "soft", color: "gray" }, "Cancel")),
                React.createElement(AlertDialog.Action, null,
                    React.createElement(Button, { variant: "classic", color: "red" }, "Revoke access")))))),
};
export const Sizes = {
    render: (args) => (React.createElement("div", { style: { display: 'flex', gap: 'var(--space-4)' } },
        React.createElement(AlertDialog.Root, null,
            React.createElement(AlertDialog.Trigger, null,
                React.createElement(Button, { variant: "classic", color: "red" }, "Size 1")),
            React.createElement(AlertDialog.Content, { style: { maxWidth: 350 }, ...args, size: "1" },
                React.createElement(AlertDialog.Title, null, "Revoke access"),
                React.createElement(AlertDialog.Description, null, "Are you sure? This application will no longer be accessible and any existing sessions will be expired."),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)', justifyContent: 'flex-end' } },
                    React.createElement(AlertDialog.Cancel, null,
                        React.createElement(Button, { size: "1", variant: "soft", color: "gray" }, "Cancel")),
                    React.createElement(AlertDialog.Action, null,
                        React.createElement(Button, { size: "1", variant: "classic", color: "red" }, "Revoke access"))))),
        React.createElement(AlertDialog.Root, null,
            React.createElement(AlertDialog.Trigger, null,
                React.createElement(Button, { variant: "classic", color: "red" }, "Size 2")),
            React.createElement(AlertDialog.Content, { style: { maxWidth: 350 }, size: "2" },
                React.createElement(AlertDialog.Title, null, "Revoke access"),
                React.createElement(AlertDialog.Description, null, "Are you sure? This application will no longer be accessible and any existing sessions will be expired."),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)', justifyContent: 'flex-end' } },
                    React.createElement(AlertDialog.Cancel, null,
                        React.createElement(Button, { size: "2", variant: "soft", color: "gray" }, "Cancel")),
                    React.createElement(AlertDialog.Action, null,
                        React.createElement(Button, { size: "2", variant: "classic", color: "red" }, "Revoke access"))))),
        React.createElement(AlertDialog.Root, null,
            React.createElement(AlertDialog.Trigger, null,
                React.createElement(Button, { variant: "classic", color: "red" }, "Size 3")),
            React.createElement(AlertDialog.Content, { style: { maxWidth: 350 }, size: "3" },
                React.createElement(AlertDialog.Title, null, "Revoke access"),
                React.createElement(AlertDialog.Description, null, "Are you sure? This application will no longer be accessible and any existing sessions will be expired."),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', justifyContent: 'flex-end' } },
                    React.createElement(AlertDialog.Cancel, null,
                        React.createElement(Button, { size: "2", variant: "soft", color: "gray" }, "Cancel")),
                    React.createElement(AlertDialog.Action, null,
                        React.createElement(Button, { size: "2", variant: "classic", color: "red" }, "Revoke access"))))),
        React.createElement(AlertDialog.Root, null,
            React.createElement(AlertDialog.Trigger, null,
                React.createElement(Button, { variant: "classic", color: "red" }, "Size 4")),
            React.createElement(AlertDialog.Content, { style: { maxWidth: 350 }, size: "4" },
                React.createElement(AlertDialog.Title, null, "Revoke access"),
                React.createElement(AlertDialog.Description, null, "Are you sure? This application will no longer be accessible and any existing sessions will be expired."),
                React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', justifyContent: 'flex-end' } },
                    React.createElement(AlertDialog.Cancel, null,
                        React.createElement(Button, { size: "3", variant: "soft", color: "gray" }, "Cancel")),
                    React.createElement(AlertDialog.Action, null,
                        React.createElement(Button, { size: "3", variant: "classic", color: "red" }, "Revoke access"))))))),
};
export const InsetContent = {
    name: 'With inset content',
    render: (args) => (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 'var(--space-6)' } },
        React.createElement(Text, null,
            "Use the ",
            React.createElement(Code, null, "Inset"),
            " component to align content flush with the sides of the dialog (bypassing its padding)."),
        React.createElement("div", null,
            React.createElement(AlertDialog.Root, null,
                React.createElement(AlertDialog.Trigger, null,
                    React.createElement(Button, { color: "red", variant: "classic" }, "Delete users")),
                React.createElement(AlertDialog.Content, { style: { maxWidth: 500 }, ...args },
                    React.createElement(AlertDialog.Title, null, "Delete Users"),
                    React.createElement(AlertDialog.Description, null, "Are you sure you want to delete these users? This action is permanent and cannot be undone."),
                    React.createElement(Inset, { side: "x", style: { marginTop: 'var(--space-5)', marginBottom: 'var(--space-5)' } },
                        React.createElement(Table.Root, null,
                            React.createElement(Table.Header, null,
                                React.createElement(Table.Row, null,
                                    React.createElement(Table.ColumnHeaderCell, null, "Full name"),
                                    React.createElement(Table.ColumnHeaderCell, null, "Email"),
                                    React.createElement(Table.ColumnHeaderCell, null, "Group"))),
                            React.createElement(Table.Body, null,
                                React.createElement(Table.Row, null,
                                    React.createElement(Table.RowHeaderCell, null, "Danilo Sousa"),
                                    React.createElement(Table.Cell, null, "danilo@example.com"),
                                    React.createElement(Table.Cell, null, "Developer")),
                                React.createElement(Table.Row, null,
                                    React.createElement(Table.RowHeaderCell, null, "Zahra Ambessa"),
                                    React.createElement(Table.Cell, null, "zahra@example.com"),
                                    React.createElement(Table.Cell, null, "Admin"))))),
                    React.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', justifyContent: 'flex-end' } },
                        React.createElement(AlertDialog.Cancel, null,
                            React.createElement(Button, { variant: "soft", color: "gray" }, "Cancel")),
                        React.createElement(AlertDialog.Action, null,
                            React.createElement(Button, { color: "red", variant: "classic" }, "Delete users")))))))),
};
//# sourceMappingURL=alert-dialog.stories.js.map