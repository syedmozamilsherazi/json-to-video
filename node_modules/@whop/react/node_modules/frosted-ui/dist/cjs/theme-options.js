"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.warningColors = exports.themePropDefs = exports.themeGrayColorsGrouped = exports.themeAccentColorsOrdered = exports.themeAccentColorsGrouped = exports.successColors = exports.semanticColors = exports.infoColors = exports.dangerColors = exports.colorPanelElevationColors = void 0;
exports.getMatchingGrayColor = getMatchingGrayColor;
const radix_colors_1 = require("./helpers/radix-colors");
const colorPanelElevationColors = ['color-panel-elevation'];
exports.colorPanelElevationColors = colorPanelElevationColors;
const semanticColors = ['danger', 'warning', 'success', 'info'];
exports.semanticColors = semanticColors;
const appearances = ['inherit', 'light', 'dark'];
const accentColors = [...radix_colors_1.radixColorScales, 'gray'];
const grayColors = [...radix_colors_1.radixGrayScales, 'auto'];
const dangerColors = ['tomato', 'red', 'ruby'];
exports.dangerColors = dangerColors;
const warningColors = ['yellow', 'amber'];
exports.warningColors = warningColors;
const successColors = ['teal', 'jade', 'green', 'grass'];
exports.successColors = successColors;
const infoColors = ['blue', 'sky'];
exports.infoColors = infoColors;
const themePropDefs = {
    hasBackground: { type: 'boolean', default: true },
    appearance: { type: 'enum', values: appearances, default: 'inherit' },
    accentColor: { type: 'enum', values: accentColors, default: 'blue' },
    grayColor: { type: 'enum', values: grayColors, default: 'gray' },
    dangerColor: { type: 'enum', values: dangerColors, default: 'red' },
    warningColor: { type: 'enum', values: warningColors, default: 'amber' },
    successColor: { type: 'enum', values: successColors, default: 'green' },
    infoColor: { type: 'enum', values: infoColors, default: 'sky' },
};
exports.themePropDefs = themePropDefs;
const themeAccentColorsGrouped = [
    {
        label: 'Regulars',
        values: [...radix_colors_1.radixColorScalesRegular],
    },
    {
        label: 'Brights',
        values: [...radix_colors_1.radixColorScalesBright],
    },
    { label: 'Metals', values: [...radix_colors_1.radixColorScalesMetal] },
    { label: 'Gray', values: ['gray'] },
];
exports.themeAccentColorsGrouped = themeAccentColorsGrouped;
const themeAccentColorsOrdered = [
    'gray',
    'gold',
    'bronze',
    'brown',
    'yellow',
    'amber',
    'tomato',
    'red',
    'ruby',
    'crimson',
    'pink',
    'plum',
    'purple',
    'violet',
    'iris',
    'cyan',
    'teal',
    'jade',
    'green',
    'grass',
    'mint',
    'sky',
    // Whop Brand Colors
    'blue',
    'orange',
    'indigo',
    'magenta',
    'lemon',
    'lime',
];
exports.themeAccentColorsOrdered = themeAccentColorsOrdered;
const themeGrayColorsGrouped = [
    { label: 'Pure', values: [radix_colors_1.radixGrayScalePure] },
    {
        label: 'Desaturated',
        values: ['auto', ...radix_colors_1.radixGrayScalesDesaturated],
    },
];
exports.themeGrayColorsGrouped = themeGrayColorsGrouped;
function getMatchingGrayColor(accentColor) {
    if (accentColor === 'gray')
        return 'gray';
    return (0, radix_colors_1.radixGetMatchingGrayScale)(accentColor);
}
//# sourceMappingURL=theme-options.js.map