"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Trigger = exports.Root = exports.List = exports.Content = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const SegmentedControlRoot = (props) => {
    const { className, ...rootProps } = props;
    return React.createElement(radix_ui_1.Tabs.Root, { ...rootProps, className: (0, classnames_1.default)('fui-BaseSegmentedControlRoot', className) });
};
exports.Root = SegmentedControlRoot;
SegmentedControlRoot.displayName = 'SegmentedControlRoot';
const SegmentedControlList = (props) => {
    const { className, ...listProps } = props;
    return React.createElement(radix_ui_1.Tabs.List, { ...listProps, className: (0, classnames_1.default)('fui-BaseSegmentedControlList', className) });
};
exports.List = SegmentedControlList;
SegmentedControlList.displayName = 'SegmentedControlList';
const SegmentedControlTrigger = (props) => {
    const { className, children, ...triggerProps } = props;
    return (React.createElement(radix_ui_1.Tabs.Trigger, { ...triggerProps, className: (0, classnames_1.default)('fui-reset', 'fui-BaseSegmentedControlTrigger', className) },
        React.createElement("span", { className: "fui-BaseSegmentedControlTriggerInner" }, children)));
};
exports.Trigger = SegmentedControlTrigger;
SegmentedControlTrigger.displayName = 'SegmentedControlTrigger';
const SegmentedControlContent = (props) => (React.createElement(radix_ui_1.Tabs.Content, { ...props, className: (0, classnames_1.default)('fui-SegmentedControlContent', props.className) }));
exports.Content = SegmentedControlContent;
SegmentedControlContent.displayName = 'SegmentedControlContent';
//# sourceMappingURL=segmented-control.js.map