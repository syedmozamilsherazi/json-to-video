import * as React from 'react';
import { Text } from '../text';
import { calloutRootPropDefs } from './callout.props';
import type { ExtractPropsForTag, GetPropDefTypes, PropsWithoutColor } from '../../helpers';
type CalloutRootOwnProps = GetPropDefTypes<typeof calloutRootPropDefs>;
type CalloutContextValue = CalloutRootOwnProps;
interface CalloutRootProps extends PropsWithoutColor<'div'>, CalloutContextValue {
}
declare const CalloutRoot: {
    (props: CalloutRootProps): React.JSX.Element;
    displayName: string;
};
interface CalloutIconProps extends PropsWithoutColor<'div'> {
}
declare const CalloutIcon: {
    (props: CalloutIconProps): React.JSX.Element;
    displayName: string;
};
type CalloutTextProps = ExtractPropsForTag<typeof Text, 'p'>;
declare const CalloutText: {
    (props: CalloutTextProps): React.JSX.Element;
    displayName: string;
};
export { CalloutIcon as Icon, CalloutRoot as Root, CalloutText as Text };
export type { CalloutIconProps as IconProps, CalloutRootProps as RootProps, CalloutTextProps as TextProps };
