"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HighContrast = exports.Color = exports.Orientation = exports.Size = exports.Default = void 0;
const tslib_1 = require("tslib");
const icons_1 = require("@frosted-ui/icons");
const react_1 = tslib_1.__importDefault(require("react"));
const components_1 = require("../../../src/components/");
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Data presentation/DataList',
    component: components_1.DataList.Root,
    args: {
        size: components_1.dataListRootPropDefs.size.default,
        orientation: components_1.dataListRootPropDefs.orientation.default,
        trim: components_1.dataListRootPropDefs.trim.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    render: (args) => (react_1.default.createElement("div", null,
        react_1.default.createElement(components_1.Text, { as: "p", style: { marginBottom: 32 } },
            react_1.default.createElement(components_1.Code, null, '<DataList />'),
            " component displays metadata as a list of key-value pairs."),
        react_1.default.createElement(components_1.DataList.Root, { ...args },
            react_1.default.createElement(components_1.DataList.Item, { align: "center" },
                react_1.default.createElement(components_1.DataList.Label, null, "Status"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Badge, { color: "jade", variant: "soft", size: "1" }, "Active"))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "ID"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-2)' } },
                        react_1.default.createElement(components_1.Code, { variant: "ghost" }, "biz_AB23XH123A"),
                        react_1.default.createElement(components_1.Tooltip, { content: "Copy" },
                            react_1.default.createElement(components_1.IconButton, { size: "1", "aria-label": "Copy value", color: "gray", variant: "ghost" },
                                react_1.default.createElement(icons_1.Copy12, null)))))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop")))))),
};
exports.Size = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-8)' } },
        react_1.default.createElement(components_1.DataList.Root, { ...args, size: "1" },
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop")))),
        react_1.default.createElement(components_1.DataList.Root, { ...args, size: "2" },
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop")))),
        react_1.default.createElement(components_1.DataList.Root, { ...args, size: "3" },
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                react_1.default.createElement(components_1.DataList.Value, null,
                    react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop")))))),
};
exports.Orientation = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-8)' } },
        react_1.default.createElement("div", null,
            react_1.default.createElement(components_1.Heading, { size: "3" }, "Horizontal"),
            react_1.default.createElement(components_1.Separator, { orientation: "horizontal", size: "4", style: { marginBottom: 16, marginTop: 16 } }),
            react_1.default.createElement(components_1.DataList.Root, { ...args, orientation: 'horizontal' },
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                    react_1.default.createElement(components_1.DataList.Value, null,
                        react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                    react_1.default.createElement(components_1.DataList.Value, null,
                        react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop"))))),
        react_1.default.createElement("div", null,
            react_1.default.createElement(components_1.Heading, { size: "3" }, "Vertical"),
            react_1.default.createElement(components_1.Separator, { orientation: "horizontal", size: "4", style: { marginBottom: 16, marginTop: 16 } }),
            react_1.default.createElement(components_1.DataList.Root, { ...args, orientation: 'vertical' },
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Artur Bie\u0144")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Email"),
                    react_1.default.createElement(components_1.DataList.Value, null,
                        react_1.default.createElement(components_1.Link, { href: "mailto:artur@whop.com" }, "artur@whop.com"))),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, null, "Company"),
                    react_1.default.createElement(components_1.DataList.Value, null,
                        react_1.default.createElement(components_1.Link, { target: "_blank", href: "https://whop.com" }, "Whop"))))))),
};
exports.Color = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)' } },
        react_1.default.createElement(components_1.Text, null,
            "Use the ",
            react_1.default.createElement(components_1.Code, null, "color"),
            " prop on the ",
            react_1.default.createElement(components_1.Code, null, '<DataList.Label />'),
            " component to assign a specific color."),
        react_1.default.createElement(components_1.DataList.Root, { orientation: "vertical", ...args },
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, { color: "iris", style: { minWidth: 40 } }, "Color:"),
                react_1.default.createElement(components_1.DataList.Value, null, "Iris")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, { color: "cyan", style: { minWidth: 40 } }, "Color:"),
                react_1.default.createElement(components_1.DataList.Value, null, "Cyan")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, { color: "lime", style: { minWidth: 40 } }, "Color:"),
                react_1.default.createElement(components_1.DataList.Value, null, "Lime")),
            react_1.default.createElement(components_1.DataList.Item, null,
                react_1.default.createElement(components_1.DataList.Label, { color: "crimson", style: { minWidth: 40 } }, "Color:"),
                react_1.default.createElement(components_1.DataList.Value, null, "Crimson"))))),
};
exports.HighContrast = {
    name: 'High Contrast',
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)' } },
        react_1.default.createElement(components_1.Text, null,
            "Use the ",
            react_1.default.createElement(components_1.Code, null, "highContrast"),
            " prop on the ",
            react_1.default.createElement(components_1.Code, null, '<DataList.Label />'),
            " component ",
            react_1.default.createElement("br", null),
            " to increase color contrast with the background."),
        react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-9)' } },
            react_1.default.createElement(components_1.DataList.Root, { orientation: "vertical", ...args },
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "iris" }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Iris")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "cyan" }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Cyan")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "lime" }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Lime")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "crimson" }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Crimson"))),
            react_1.default.createElement(components_1.DataList.Root, { orientation: "vertical", ...args },
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "iris", highContrast: true }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Iris")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "cyan", highContrast: true }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Cyan")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "lime", highContrast: true }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Lime")),
                react_1.default.createElement(components_1.DataList.Item, null,
                    react_1.default.createElement(components_1.DataList.Label, { color: "crimson", highContrast: true }, "Name"),
                    react_1.default.createElement(components_1.DataList.Value, null, "Crimson")))))),
};
//# sourceMappingURL=data-list.stories.js.map