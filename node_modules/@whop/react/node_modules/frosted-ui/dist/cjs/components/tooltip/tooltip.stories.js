"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShowOnOverflow = exports.Default = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const __1 = require("..");
const ExampleIcon = ({ size }) => (react_1.default.createElement("svg", { width: size, height: size, viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    react_1.default.createElement("path", { d: "M3 2.5C3 2.22386 3.22386 2 3.5 2H11.5C11.7761 2 12 2.22386 12 2.5V13.5C12 13.6818 11.9014 13.8492 11.7424 13.9373C11.5834 14.0254 11.3891 14.0203 11.235 13.924L7.5 11.5896L3.765 13.924C3.61087 14.0203 3.41659 14.0254 3.25762 13.9373C3.09864 13.8492 3 13.6818 3 13.5V2.5ZM4 3V12.5979L6.97 10.7416C7.29427 10.539 7.70573 10.539 8.03 10.7416L11 12.5979V3H4Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" })));
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/Tooltip',
    component: __1.Tooltip,
    args: {
        type: __1.tooltipPropDefs.type.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    args: {
        content: 'Add to library',
    },
    render: (args) => (react_1.default.createElement(__1.Tooltip, { ...args },
        react_1.default.createElement(__1.IconButton, null,
            react_1.default.createElement(ExampleIcon, { size: 16 })))),
};
exports.ShowOnOverflow = {
    name: 'Show on overflow',
    args: {
        content: 'This is a really long text',
        type: 'overflow',
    },
    render: ({ content, type }) => {
        return (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-5)' } },
            react_1.default.createElement(__1.Tooltip, { content: content, type: type, defaultOpen: true },
                react_1.default.createElement(__1.Text, null, content)),
            react_1.default.createElement(__1.Tooltip, { content: content, type: type, defaultOpen: true },
                react_1.default.createElement(__1.Text, { style: {
                        width: 100,
                        overflow: 'hidden',
                        textOverflow: 'ellipsis',
                        whiteSpace: 'nowrap',
                    } }, content))));
    },
};
//# sourceMappingURL=tooltip.stories.js.map