"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkbox = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const checkbox_props_1 = require("./checkbox.props");
const CheckboxCheckmarkIcon = ({ color = 'currentColor', size, ...props }) => {
    switch (size) {
        case '1':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", ...props },
                React.createElement("path", { d: "M4 8.5L6.5 11L12 5.5", stroke: color, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" })));
        case '2':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", ...props },
                React.createElement("path", { d: "M5 11L8 14L15 7", stroke: color, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" })));
        case '3':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", ...props },
                React.createElement("path", { d: "M7 13L10 16L17 9", stroke: color, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" })));
        default:
            throw Error('Invalid size');
    }
};
CheckboxCheckmarkIcon.displayName = 'CheckboxCheckmarkIcon';
const CheckboxIndeterminateIcon = ({ color = 'currentColor', size, ...props }) => {
    switch (size) {
        case '1':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", ...props },
                React.createElement("path", { d: "M5 8H11", stroke: color, strokeWidth: "1.5", strokeLinecap: "round" })));
        case '2':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", ...props },
                React.createElement("path", { d: "M6 10H14", stroke: color, strokeWidth: "1.5", strokeLinecap: "round" })));
        case '3':
            return (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", ...props },
                React.createElement("path", { d: "M7 12H17", stroke: color, strokeWidth: "1.5", strokeLinecap: "round" })));
        default:
            throw Error('Invalid size');
    }
};
CheckboxIndeterminateIcon.displayName = 'CheckboxIndeterminateIcon';
const Checkbox = (props) => {
    const { children, className, style, size = checkbox_props_1.checkboxPropDefs.size.default, color = checkbox_props_1.checkboxPropDefs.color.default, highContrast = checkbox_props_1.checkboxPropDefs.highContrast.default, ...checkboxProps } = props;
    const Comp = children ? 'label' : 'span';
    return (React.createElement(Comp, { className: (0, classnames_1.default)('fui-CheckboxRoot', className, `fui-r-size-${size}`), style: style },
        React.createElement(radix_ui_1.Checkbox.Root, { "data-accent-color": color, ...checkboxProps, className: (0, classnames_1.default)('fui-reset', 'fui-CheckboxButton', {
                'fui-high-contrast': highContrast,
            }) },
            React.createElement(radix_ui_1.Checkbox.Indicator, { className: "fui-CheckboxIndicator" }, checkboxProps.checked === 'indeterminate' ? (React.createElement(CheckboxIndeterminateIcon, { size: size, className: "fui-CheckboxIndicatorIcon" })) : (React.createElement(CheckboxCheckmarkIcon, { size: size, className: "fui-CheckboxIndicatorIcon" })))),
        children));
};
exports.Checkbox = Checkbox;
Checkbox.displayName = 'Checkbox';
//# sourceMappingURL=checkbox.js.map