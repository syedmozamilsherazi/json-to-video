"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Root = exports.Item = exports.DropdownItem = exports.Dropdown = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const breadcrumbs_props_1 = require("./breadcrumbs.props");
const __1 = require("../");
const icons_1 = require("../../icons");
const BreadcrumbsRoot = (props) => {
    const { className, children, asChild = false, color = breadcrumbs_props_1.breadcrumbsPropDefs.color.default, ...baseButtonProps } = props;
    const Comp = asChild ? radix_ui_1.Slot.Root : 'nav';
    const count = React.Children.count(children);
    return (React.createElement(Comp, { "data-accent-color": color, ...baseButtonProps, className: (0, classnames_1.default)('fui-BreadcrumbsRoot', className) }, React.Children.map(children, (child, index) => {
        const isLastItem = index === count - 1;
        const separator = React.createElement(icons_1.ChevronRightIcon, { className: "fui-BreadcrumbsSeparator" });
        if (isLastItem && !child.props.onClick) {
            return (React.createElement(React.Fragment, null,
                index > 0 ? separator : null,
                React.createElement(__1.Text, { as: "div", "data-accent-color": color, size: '1', children: child.props.children, className: (0, classnames_1.default)('fui-reset', 'fui-BreadcrumbsLastItem', child.props.className) })));
        }
        else {
            const breadcrumbChild = React.cloneElement(child, {
                color,
                ...child.props,
            });
            return (React.createElement(React.Fragment, null,
                index > 0 ? separator : null,
                breadcrumbChild));
        }
    })));
};
exports.Root = BreadcrumbsRoot;
BreadcrumbsRoot.displayName = 'BreadcrumbsRoot';
const BreadcrumbsItem = (props) => (React.createElement(__1.Button, { ...props, size: "1", variant: 'ghost', className: (0, classnames_1.default)('fui-BreadcrumbsItem', props.className) }));
exports.Item = BreadcrumbsItem;
BreadcrumbsItem.displayName = 'BreadcrumbsItem';
const BreadcrumbsDropdown = ({ color, ...props }) => (React.createElement(__1.DropdownMenu.Root, null,
    React.createElement(__1.DropdownMenu.Trigger, null,
        React.createElement(BreadcrumbsItem, { color: color }, "...")),
    React.createElement(__1.DropdownMenu.Content, { ...props, size: "2", color: color }, props.children)));
exports.Dropdown = BreadcrumbsDropdown;
BreadcrumbsDropdown.displayName = 'BreadcrumbsDropdown';
const BreadcrumbsDropdownItem = (props) => React.createElement(__1.DropdownMenu.Item, { ...props });
exports.DropdownItem = BreadcrumbsDropdownItem;
BreadcrumbsDropdownItem.displayName = 'BreadcrumbsDropdownItem';
//# sourceMappingURL=breadcrumbs.js.map