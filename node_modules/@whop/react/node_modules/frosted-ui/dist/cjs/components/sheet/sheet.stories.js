"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Controlled = exports.ScrollableContent = exports.InsetContent = exports.Nested = exports.Default = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const __1 = require("..");
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Components/Sheet',
    component: __1.Sheet.Content,
    args: {
    // size: dialogContentPropDefs.size.default,
    },
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    render: (args) => (react_1.default.createElement(__1.Sheet.Root, null,
        react_1.default.createElement(__1.Sheet.Trigger, null,
            react_1.default.createElement(__1.Button, null, "Edit profile")),
        react_1.default.createElement(__1.Sheet.Content, { ...args },
            react_1.default.createElement(__1.Sheet.Header, null,
                react_1.default.createElement(__1.Sheet.Title, null, "Edit profile"),
                react_1.default.createElement(__1.Sheet.Description, null, "Make changes to your profile.")),
            react_1.default.createElement(__1.Sheet.Body, null,
                react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)' } },
                    react_1.default.createElement("label", null,
                        react_1.default.createElement(__1.Text, { as: "div", size: "2", style: { marginBottom: 'var(--space-1)' }, weight: "bold" }, "Name"),
                        react_1.default.createElement(__1.TextField.Input, { size: "3", defaultValue: "Freja Johnsen", placeholder: "Enter your full name" })),
                    react_1.default.createElement("label", null,
                        react_1.default.createElement(__1.Text, { as: "div", size: "2", style: { marginBottom: 'var(--space-1)' }, weight: "bold" }, "Email"),
                        react_1.default.createElement(__1.TextField.Input, { size: "3", defaultValue: "freja@example.com", placeholder: "Enter your email" }))),
                react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', marginTop: 'var(--space-4)', justifyContent: 'flex-end' } },
                    react_1.default.createElement(__1.Sheet.Close, null,
                        react_1.default.createElement(__1.Button, { variant: "soft", color: "gray", onClick: () => alert('Cancel') }, "Cancel")),
                    react_1.default.createElement(__1.Sheet.Close, null,
                        react_1.default.createElement(__1.Button, { onClick: () => alert('Save') }, "Save"))))))),
};
exports.Nested = {
    render: (args) => (react_1.default.createElement(__1.Sheet.Root, null,
        react_1.default.createElement(__1.Sheet.Trigger, null,
            react_1.default.createElement(__1.Button, null, "Edit profile")),
        react_1.default.createElement(__1.Sheet.Content, { ...args },
            react_1.default.createElement(__1.Sheet.Header, null,
                react_1.default.createElement(__1.Sheet.Title, null, "Message request"),
                react_1.default.createElement(__1.Sheet.Description, null, "Artur wants to message you")),
            react_1.default.createElement(__1.Sheet.Body, null,
                react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', marginTop: 'var(--space-4)', justifyContent: 'flex-end' } },
                    react_1.default.createElement(__1.Sheet.NestedRoot, null,
                        react_1.default.createElement(__1.Sheet.Trigger, null,
                            react_1.default.createElement(__1.Button, { variant: "soft", color: "danger" }, "Block")),
                        react_1.default.createElement(__1.Sheet.Content, null,
                            react_1.default.createElement(__1.Sheet.Header, null,
                                react_1.default.createElement(__1.Sheet.Title, null, "Are you sure you want to block Artur?"),
                                react_1.default.createElement(__1.Sheet.Description, null, "Artur won't be able to message you unless you unblock him.")),
                            react_1.default.createElement(__1.Sheet.Body, null,
                                react_1.default.createElement("div", { style: {
                                        display: 'flex',
                                        gap: 'var(--space-3)',
                                        marginTop: 'var(--space-4)',
                                        justifyContent: 'flex-end',
                                    } },
                                    react_1.default.createElement(__1.Sheet.Close, null,
                                        react_1.default.createElement(__1.Button, { size: "3" }, "Cancel")),
                                    react_1.default.createElement(__1.Sheet.Close, null,
                                        react_1.default.createElement(__1.Button, { variant: "classic", color: "danger", size: "3" }, "Block")))))),
                    react_1.default.createElement(__1.Sheet.Close, null,
                        react_1.default.createElement(__1.Button, { onClick: () => alert('Save') }, "Save"))))))),
};
exports.InsetContent = {
    name: 'With inset content',
    render: (args) => (react_1.default.createElement(__1.Sheet.Root, null,
        react_1.default.createElement(__1.Sheet.Trigger, null,
            react_1.default.createElement(__1.Button, null, "View users")),
        react_1.default.createElement(__1.Sheet.Content, { ...args },
            react_1.default.createElement(__1.Sheet.Header, null,
                react_1.default.createElement(__1.Sheet.Title, null, "Users"),
                react_1.default.createElement(__1.Sheet.Description, null, "The following users have access to this project.")),
            react_1.default.createElement(__1.Sheet.Body, null,
                react_1.default.createElement(__1.Inset, { side: "x", style: { marginBottom: 'var(--space-4)' } },
                    react_1.default.createElement(__1.Table.Root, { variant: "ghost", size: "1" },
                        react_1.default.createElement(__1.ScrollArea, { scrollbars: "horizontal" },
                            react_1.default.createElement(__1.Table.Table, null,
                                react_1.default.createElement(__1.Table.Header, null,
                                    react_1.default.createElement(__1.Table.Row, null,
                                        react_1.default.createElement(__1.Table.ColumnHeaderCell, null,
                                            react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                react_1.default.createElement(__1.Checkbox, null),
                                                "Full name")),
                                        react_1.default.createElement(__1.Table.ColumnHeaderCell, null, "Email"),
                                        react_1.default.createElement(__1.Table.ColumnHeaderCell, null, "Group"))),
                                react_1.default.createElement(__1.Table.Body, null,
                                    react_1.default.createElement(__1.Table.Row, null,
                                        react_1.default.createElement(__1.Table.RowHeaderCell, null,
                                            react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                react_1.default.createElement(__1.Checkbox, null),
                                                "Danilo Sousa")),
                                        react_1.default.createElement(__1.Table.Cell, null, "danilo@example.com"),
                                        react_1.default.createElement(__1.Table.Cell, null,
                                            react_1.default.createElement(__1.Badge, { color: "green" }, "Developer"))),
                                    react_1.default.createElement(__1.Table.Row, null,
                                        react_1.default.createElement(__1.Table.RowHeaderCell, null,
                                            react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                react_1.default.createElement(__1.Checkbox, null),
                                                "Zahra Ambessa")),
                                        react_1.default.createElement(__1.Table.Cell, null, "zahra@example.com"),
                                        react_1.default.createElement(__1.Table.Cell, null,
                                            react_1.default.createElement(__1.Badge, { color: "amber" }, "Admin"))),
                                    react_1.default.createElement(__1.Table.Row, null,
                                        react_1.default.createElement(__1.Table.RowHeaderCell, null,
                                            react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', gap: 'var(--space-3)' } },
                                                react_1.default.createElement(__1.Checkbox, null),
                                                "Jasper Eriksson")),
                                        react_1.default.createElement(__1.Table.Cell, null, "jasper@example.com"),
                                        react_1.default.createElement(__1.Table.Cell, null,
                                            react_1.default.createElement(__1.Badge, { color: "green" }, "Developer")))))))),
                react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-3)', justifyContent: 'flex-end' } },
                    react_1.default.createElement(__1.Sheet.Close, null,
                        react_1.default.createElement(__1.Button, { variant: "soft", color: "gray" }, "Close"))))))),
};
exports.ScrollableContent = {
    name: 'Scrollable content',
    render: (args) => (react_1.default.createElement(__1.Sheet.Root, null,
        react_1.default.createElement(__1.Sheet.Trigger, null,
            react_1.default.createElement(__1.Button, null, "View users")),
        react_1.default.createElement(__1.Sheet.Content, { ...args },
            react_1.default.createElement(__1.Sheet.Header, null,
                react_1.default.createElement(__1.Sheet.Title, null, "Users"),
                react_1.default.createElement(__1.Sheet.Description, null, "The following users have access to this project.")),
            react_1.default.createElement(__1.Sheet.Body, null,
                react_1.default.createElement(__1.Inset, { side: "all", px: "current", pt: "current", style: {
                        flex: 1,
                        overflowY: 'auto',
                        borderTop: '1px solid var(--gray-a4)',
                        borderBottom: '1px solid var(--gray-a4)',
                    } },
                    react_1.default.createElement(__1.Text, { as: "p", size: "2", style: { marginBottom: 'var(--space-4)' } }, "Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes"),
                    react_1.default.createElement(__1.Text, { as: "p", size: "2", style: { marginBottom: 'var(--space-4)' } }, "Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes"),
                    react_1.default.createElement(__1.Text, { as: "p", size: "2", style: { marginBottom: 'var(--space-4)' } }, "Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes to your profile. Make changes")))))),
};
exports.Controlled = {
    name: 'Controlled (non dismissable)',
    render: (args) => {
        const [open, setOpen] = react_1.default.useState(false);
        return (react_1.default.createElement(__1.Sheet.Root, { dismissible: false, open: open },
            react_1.default.createElement(__1.Sheet.Trigger, { onClick: () => setOpen(true) },
                react_1.default.createElement(__1.Button, null, "Delete account")),
            react_1.default.createElement(__1.Sheet.Content, { ...args },
                react_1.default.createElement(__1.Sheet.Header, null,
                    react_1.default.createElement(__1.Sheet.Title, null, "Delete account"),
                    react_1.default.createElement(__1.Sheet.Description, { color: "gray" }, "Are you sure you want to delete your account?")),
                react_1.default.createElement(__1.Sheet.Body, null,
                    react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-3)', width: '100%' } },
                        react_1.default.createElement(__1.Sheet.Close, { onClick: () => setOpen(false) },
                            react_1.default.createElement(__1.Button, { variant: "surface", style: { width: '100%' }, size: "3" }, "Cancel")),
                        react_1.default.createElement(__1.Sheet.Close, { onClick: () => setOpen(false) },
                            react_1.default.createElement(__1.Button, { variant: "classic", color: "danger", style: { width: '100%' }, size: "3" }, "Delete account")))))));
    },
};
// TODO: add support for snapPoints
// export const SnapPoints: Story = {
//   name: 'Snap points',
//   render: ({ children, ...args }) => {
//     const snapPoints = ['120px', '240px', 1];
//     const [snap, setSnap] = React.useState<string | number | null>('420px');
//     return (
//       <Sheet.Root
//       snapPoints={snapPoints}
//       activeSnapPoint={snap}
//       setActiveSnapPoint={(a) => console.log({ a })}
//       >
//         <Sheet.Trigger>
//           <Button>Open Sheet</Button>
//         </Sheet.Trigger>
//         <Sheet.Content {...args}>
//           <Sheet.Header>
//             <Sheet.Title>Delete account</Sheet.Title>
//             <Sheet.Description>
//               Are you sure you want to delete your account?
//             </Sheet.Description>
//           </Sheet.Header>
//           <Sheet.Body>
//             <div style={{ height: 120, width: '100%', background: 'red' }} />
//             <div style={{ height: 120, width: '100%', background: 'blue' }} />
//             <div style={{ height: 260, width: '100%', background: 'green' }} />
//           </Sheet.Body>
//         </Sheet.Content>
//       </Sheet.Root>
//     );
//   },
// };
//# sourceMappingURL=sheet.stories.js.map