"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Trigger = exports.Root = exports.Content = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const theme_1 = require("../../theme");
const hover_card_props_1 = require("./hover-card.props");
const HoverCardRoot = (props) => (React.createElement(radix_ui_1.HoverCard.Root, { closeDelay: 150, openDelay: 200, ...props }));
exports.Root = HoverCardRoot;
HoverCardRoot.displayName = 'HoverCardRoot';
const HoverCardTrigger = (props) => (React.createElement(radix_ui_1.HoverCard.Trigger, { className: (0, classnames_1.default)('fui-HoverCardTrigger', props.className), ...props, asChild: true }));
exports.Trigger = HoverCardTrigger;
HoverCardTrigger.displayName = 'HoverCardTrigger';
const HoverCardContent = (props) => {
    const { className, forceMount, container, size = hover_card_props_1.hoverCardContentPropDefs.size.default, variant = hover_card_props_1.hoverCardContentPropDefs.variant.default, ...contentProps } = props;
    return (React.createElement(radix_ui_1.HoverCard.Portal, { container: container, forceMount: forceMount },
        React.createElement(theme_1.Theme, { asChild: true },
            React.createElement(radix_ui_1.HoverCard.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...contentProps, className: (0, classnames_1.default)('fui-PopperContent', 'fui-HoverCardContent', `fui-variant-${variant}`, className, `fui-r-size-${size}`) }))));
};
exports.Content = HoverCardContent;
HoverCardContent.displayName = 'HoverCardContent';
//# sourceMappingURL=hover-card.js.map