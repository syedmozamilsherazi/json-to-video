import { Select as SelectPrimitive } from 'radix-ui';
import * as React from 'react';
import { selectContentPropDefs, selectRootPropDefs, selectTriggerPropDefs } from './select.props';
import type { GetPropDefTypes, PropsWithoutColor } from '../../helpers';
type SelectRootOwnProps = GetPropDefTypes<typeof selectRootPropDefs>;
type SelectContextValue = SelectRootOwnProps;
interface SelectRootProps extends React.ComponentProps<typeof SelectPrimitive.Root>, SelectContextValue {
}
declare const SelectRoot: React.FC<SelectRootProps>;
type SelectTriggerOwnProps = GetPropDefTypes<typeof selectTriggerPropDefs>;
interface SelectTriggerProps extends Omit<PropsWithoutColor<typeof SelectPrimitive.Trigger>, 'asChild'>, SelectTriggerOwnProps {
    placeholder?: React.ReactNode;
}
declare const SelectTrigger: {
    (props: SelectTriggerProps): React.JSX.Element;
    displayName: string;
};
type SelectContentOwnProps = GetPropDefTypes<typeof selectContentPropDefs>;
interface SelectContentProps extends PropsWithoutColor<typeof SelectPrimitive.Content>, SelectContentOwnProps {
    container?: React.ComponentProps<typeof SelectPrimitive.Portal>['container'];
}
declare const SelectContent: {
    (props: SelectContentProps): React.JSX.Element;
    displayName: string;
};
interface SelectItemProps extends React.ComponentProps<typeof SelectPrimitive.Item> {
}
declare const SelectItem: {
    (props: SelectItemProps): React.JSX.Element;
    displayName: string;
};
interface SelectGroupProps extends React.ComponentProps<typeof SelectPrimitive.Group> {
}
declare const SelectGroup: {
    (props: SelectGroupProps): React.JSX.Element;
    displayName: string;
};
interface SelectLabelProps extends React.ComponentProps<typeof SelectPrimitive.Label> {
}
declare const SelectLabel: {
    (props: SelectLabelProps): React.JSX.Element;
    displayName: string;
};
interface SelectSeparatorProps extends React.ComponentProps<typeof SelectPrimitive.Separator> {
}
declare const SelectSeparator: {
    (props: SelectSeparatorProps): React.JSX.Element;
    displayName: string;
};
export { SelectContent as Content, SelectGroup as Group, SelectItem as Item, SelectLabel as Label, SelectRoot as Root, SelectSeparator as Separator, SelectTrigger as Trigger, };
export type { SelectContentProps as ContentProps, SelectGroupProps as GroupProps, SelectItemProps as ItemProps, SelectLabelProps as LabelProps, SelectRootProps as RootProps, SelectSeparatorProps as SeparatorProps, SelectTriggerProps as TriggerProps, };
