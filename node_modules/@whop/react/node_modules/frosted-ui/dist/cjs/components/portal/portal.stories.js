"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const __1 = require("..");
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Utilities/Portal',
    component: __1.Portal.Root,
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    args: {},
    render: (args) => {
        const [open, setOpen] = (0, react_1.useState)(false);
        const portalContainerRef = (0, react_1.useRef)(null);
        const portalContainerElement = portalContainerRef.current;
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 'var(--space-4)' } },
                react_1.default.createElement(__1.Text, null,
                    "Anything you put inside this component will be rendered in a separate ",
                    react_1.default.createElement(__1.Code, null, `<div>`),
                    " element.",
                    react_1.default.createElement("br", null),
                    "By default, this element will be appended to ",
                    react_1.default.createElement(__1.Code, null, "document.body"),
                    " but you can choose a different container by using the container prop."),
                react_1.default.createElement("div", null,
                    react_1.default.createElement(__1.Button, { onClick: () => setOpen(true) }, "Open Portal"))),
            react_1.default.createElement("div", { id: "portal-container", ref: portalContainerRef }),
            portalContainerElement && open ? (react_1.default.createElement(__1.Portal.Root, { ...args, container: portalContainerElement },
                react_1.default.createElement("div", { style: {
                        position: 'fixed',
                        inset: 0,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        background: 'rgba(0, 0, 0, 0.65)',
                    } },
                    react_1.default.createElement(__1.Button, { onClick: () => setOpen(false) }, "Close Portal")))) : null));
    },
};
//# sourceMappingURL=portal.stories.js.map