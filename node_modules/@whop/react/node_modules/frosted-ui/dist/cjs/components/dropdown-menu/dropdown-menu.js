"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Trigger = exports.SubTrigger = exports.SubContent = exports.Sub = exports.Separator = exports.Root = exports.RadioItem = exports.RadioGroup = exports.Label = exports.Item = exports.Group = exports.Content = exports.CheckboxItem = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const icons_1 = require("../../icons");
const theme_1 = require("../../theme");
const scroll_area_1 = require("../scroll-area");
const dropdown_menu_props_1 = require("./dropdown-menu.props");
const DropdownMenuRoot = (props) => React.createElement(radix_ui_1.DropdownMenu.Root, { ...props });
exports.Root = DropdownMenuRoot;
DropdownMenuRoot.displayName = 'DropdownMenuRoot';
const DropdownMenuTrigger = (props) => React.createElement(radix_ui_1.DropdownMenu.Trigger, { ...props, asChild: true });
exports.Trigger = DropdownMenuTrigger;
DropdownMenuTrigger.displayName = 'DropdownMenuTrigger';
const DropdownMenuContentContext = React.createContext({});
const DropdownMenuContent = (props) => {
    const themeContext = (0, theme_1.useThemeContext)();
    const { className, children, size = dropdown_menu_props_1.dropdownMenuContentPropDefs.size.default, color = dropdown_menu_props_1.dropdownMenuItemPropDefs.color.default, variant = dropdown_menu_props_1.dropdownMenuContentPropDefs.variant.default, container, forceMount, ...contentProps } = props;
    const resolvedColor = color !== null && color !== void 0 ? color : themeContext.accentColor;
    return (React.createElement(radix_ui_1.DropdownMenu.Portal, { container: container, forceMount: forceMount },
        React.createElement(theme_1.Theme, { asChild: true },
            React.createElement(radix_ui_1.DropdownMenu.Content, { "data-accent-color": resolvedColor, align: "start", sideOffset: 4, collisionPadding: 10, ...contentProps, className: (0, classnames_1.default)('fui-PopperContent', 'fui-BaseMenuContent', 'fui-DropdownMenuContent', `fui-variant-${variant}`, className, `fui-r-size-${size}`) },
                React.createElement(scroll_area_1.ScrollArea, { type: "auto" },
                    React.createElement("div", { className: (0, classnames_1.default)('fui-BaseMenuViewport', 'fui-DropdownMenuViewport') },
                        React.createElement(DropdownMenuContentContext.Provider, { value: React.useMemo(() => ({ size, color: resolvedColor, variant }), [size, resolvedColor, variant]) }, children)))))));
};
exports.Content = DropdownMenuContent;
DropdownMenuContent.displayName = 'DropdownMenuContent';
const DropdownMenuLabel = (props) => (React.createElement(radix_ui_1.DropdownMenu.Label, { ...props, className: (0, classnames_1.default)('fui-BaseMenuLabel', 'fui-DropdownMenuLabel', props.className) }));
exports.Label = DropdownMenuLabel;
DropdownMenuLabel.displayName = 'DropdownMenuLabel';
const DropdownMenuItem = (props) => {
    const { className, children, color = dropdown_menu_props_1.dropdownMenuItemPropDefs.color.default, shortcut, ...itemProps } = props;
    return (React.createElement(radix_ui_1.DropdownMenu.Item, { "data-accent-color": color, ...itemProps, className: (0, classnames_1.default)('fui-reset', 'fui-BaseMenuItem', 'fui-DropdownMenuItem', className) },
        React.createElement(radix_ui_1.Slot.Slottable, null, children),
        shortcut && React.createElement("div", { className: "fui-BaseMenuShortcut fui-DropdownMenuShortcut" }, shortcut)));
};
exports.Item = DropdownMenuItem;
DropdownMenuItem.displayName = 'DropdownMenuItem';
const DropdownMenuGroup = (props) => (React.createElement(radix_ui_1.DropdownMenu.Group, { ...props, className: (0, classnames_1.default)('fui-BaseMenuGroup', 'fui-DropdownMenuGroup', props.className) }));
exports.Group = DropdownMenuGroup;
DropdownMenuGroup.displayName = 'DropdownMenuGroup';
const DropdownMenuRadioGroup = (props) => (React.createElement(radix_ui_1.DropdownMenu.RadioGroup, { ...props, className: (0, classnames_1.default)('fui-BaseMenuRadioGroup', 'fui-DropdownMenuRadioGroup', props.className) }));
exports.RadioGroup = DropdownMenuRadioGroup;
DropdownMenuRadioGroup.displayName = 'DropdownMenuRadioGroup';
const DropdownMenuRadioItem = (props) => {
    const { children, className, ...itemProps } = props;
    return (React.createElement(radix_ui_1.DropdownMenu.RadioItem, { ...itemProps, className: (0, classnames_1.default)('fui-BaseMenuItem', 'fui-BaseMenuRadioItem', 'fui-DropdownMenuItem', 'fui-DropdownMenuRadioItem', className) },
        React.createElement(radix_ui_1.Slot.Slottable, null, children),
        React.createElement(radix_ui_1.DropdownMenu.ItemIndicator, { className: "fui-BaseMenuItemIndicator fui-DropdownMenuItemIndicator" },
            React.createElement(icons_1.ThickCheckIcon, { className: "fui-BaseMenuItemIndicatorIcon fui-DropdownMenuItemIndicatorIcon" }))));
};
exports.RadioItem = DropdownMenuRadioItem;
DropdownMenuRadioItem.displayName = 'DropdownMenuRadioItem';
const DropdownMenuCheckboxItem = (props) => {
    const { children, className, shortcut, ...itemProps } = props;
    return (React.createElement(radix_ui_1.DropdownMenu.CheckboxItem, { ...itemProps, className: (0, classnames_1.default)('fui-BaseMenuItem', 'fui-BaseMenuCheckboxItem', 'fui-DropdownMenuItem', 'fui-DropdownMenuCheckboxItem', className) },
        React.createElement(radix_ui_1.Slot.Slottable, null, children),
        React.createElement(radix_ui_1.DropdownMenu.ItemIndicator, { className: "fui-BaseMenuItemIndicator fui-DropdownMenuItemIndicator" },
            React.createElement(icons_1.ThickCheckIcon, { className: "fui-BaseMenuItemIndicatorIcon fui-DropdownMenuItemIndicatorIcon" })),
        shortcut && React.createElement("div", { className: "fui-BaseMenuShortcut fui-DropdownMenuShortcut" }, shortcut)));
};
exports.CheckboxItem = DropdownMenuCheckboxItem;
DropdownMenuCheckboxItem.displayName = 'DropdownMenuCheckboxItem';
const DropdownMenuSub = (props) => React.createElement(radix_ui_1.DropdownMenu.Sub, { ...props });
exports.Sub = DropdownMenuSub;
DropdownMenuSub.displayName = 'DropdownMenuSub';
const DropdownMenuSubTrigger = (props) => {
    const { className, children, ...subTriggerProps } = props;
    return (React.createElement(radix_ui_1.DropdownMenu.SubTrigger, { ...subTriggerProps, className: (0, classnames_1.default)('fui-BaseMenuItem', 'fui-BaseMenuSubTrigger', 'fui-DropdownMenuItem', 'fui-DropdownMenuSubTrigger', className) },
        React.createElement(radix_ui_1.Slot.Slottable, null, children),
        React.createElement("div", { className: "fui-BaseMenuShortcut fui-DropdownMenuShortcut" },
            React.createElement(icons_1.ThickChevronRightIcon, { className: "fui-BaseMenuSubTriggerIcon fui-DropdownMenuSubTriggerIcon" }))));
};
exports.SubTrigger = DropdownMenuSubTrigger;
DropdownMenuSubTrigger.displayName = 'DropdownMenuSubTrigger';
const DropdownMenuSubContent = (props) => {
    const { className, children, container, forceMount, ...subContentProps } = props;
    const { size, color, variant } = React.useContext(DropdownMenuContentContext);
    return (React.createElement(radix_ui_1.DropdownMenu.Portal, { container: container, forceMount: forceMount },
        React.createElement(theme_1.Theme, { asChild: true },
            React.createElement(radix_ui_1.DropdownMenu.SubContent, { "data-accent-color": color, alignOffset: -4, sideOffset: 2, collisionPadding: 10, ...subContentProps, className: (0, classnames_1.default)('fui-PopperContent', 'fui-BaseMenuContent', 'fui-BaseMenuSubContent', 'fui-DropdownMenuContent', 'fui-DropdownMenuSubContent', `fui-variant-${variant}`, className, `fui-r-size-${size}`) },
                React.createElement(scroll_area_1.ScrollArea, { type: "auto" },
                    React.createElement("div", { className: (0, classnames_1.default)('fui-BaseMenuViewport', 'fui-DropdownMenuViewport') }, children))))));
};
exports.SubContent = DropdownMenuSubContent;
DropdownMenuSubContent.displayName = 'DropdownMenuSubContent';
const DropdownMenuSeparator = (props) => (React.createElement(radix_ui_1.DropdownMenu.Separator, { ...props, className: (0, classnames_1.default)('fui-BaseMenuSeparator', 'fui-DropdownMenuSeparator', props.className) }));
exports.Separator = DropdownMenuSeparator;
DropdownMenuSeparator.displayName = 'DropdownMenuSeparator';
//# sourceMappingURL=dropdown-menu.js.map