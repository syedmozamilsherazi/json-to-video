"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Color = exports.Size = exports.Default = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const __1 = require("..");
const ExampleIcon = ({ size }) => (react_1.default.createElement("svg", { width: size, height: size, viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    react_1.default.createElement("path", { d: "M3 8C3 6 5.70833 3 9.5 3C13.2917 3 16 6 16 8M16 8H13M16 8V8C16.5523 8 17 7.55228 17 7V4", stroke: "currentColor", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round" }),
    react_1.default.createElement("path", { d: "M17 12C17 14 14.2917 17 10.5 17C6.70833 17 4 14 4 12M4 12H7M4 12V12C3.44772 12 3 12.4477 3 13V16", stroke: "currentColor", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round" })));
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/FilterChip',
    component: __1.FilterChip,
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    args: {
        children: null,
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    args: {
        size: __1.filterChipPropDefs.size.default,
        color: __1.filterChipPropDefs.color.default,
    },
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)', flexDirection: 'row' } },
        react_1.default.createElement(__1.FilterChip, { defaultChecked: true, ...args },
            react_1.default.createElement(ExampleIcon, { size: 16 }),
            "Default"),
        react_1.default.createElement(__1.FilterChip, { defaultChecked: true, disabled: true, ...args },
            react_1.default.createElement(ExampleIcon, { size: 16 }),
            "Disabled checked"),
        react_1.default.createElement(__1.FilterChip, { defaultChecked: false, disabled: true, ...args },
            react_1.default.createElement(ExampleIcon, { size: 16 }),
            "Disabled unchecked"))),
};
exports.Size = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
        react_1.default.createElement(__1.FilterChip, { defaultChecked: true, ...args, size: "1" },
            react_1.default.createElement(ExampleIcon, { size: 16 }),
            " Size 1"),
        react_1.default.createElement(__1.FilterChip, { defaultChecked: true, ...args, size: "2" },
            react_1.default.createElement(ExampleIcon, { size: 20 }),
            " Size 2"),
        react_1.default.createElement(__1.FilterChip, { defaultChecked: true, ...args, size: "3" },
            react_1.default.createElement(ExampleIcon, { size: 24 }),
            " Size 3"))),
};
exports.Color = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', gap: 'var(--space-2)' } },
        react_1.default.createElement(__1.FilterChip, { ...args, color: "indigo", defaultChecked: true },
            react_1.default.createElement(ExampleIcon, { size: 20 }),
            "Indigo"),
        react_1.default.createElement(__1.FilterChip, { ...args, color: "cyan", defaultChecked: true },
            react_1.default.createElement(ExampleIcon, { size: 20 }),
            "Cyan"),
        react_1.default.createElement(__1.FilterChip, { ...args, color: "orange", defaultChecked: true },
            react_1.default.createElement(ExampleIcon, { size: 20 }),
            "Orange"),
        react_1.default.createElement(__1.FilterChip, { ...args, color: "crimson", defaultChecked: true },
            react_1.default.createElement(ExampleIcon, { size: 20 }),
            "Crimson"))),
};
//# sourceMappingURL=filter-chip.stories.js.map