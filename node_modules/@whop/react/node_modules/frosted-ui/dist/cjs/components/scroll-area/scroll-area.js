"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScrollArea = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const radix_ui_1 = require("radix-ui");
const React = tslib_1.__importStar(require("react"));
const scroll_area_props_1 = require("./scroll-area.props");
const ScrollArea = (props) => {
    const { className, style, type, scrollHideDelay = type !== 'scroll' ? 0 : undefined, 
    // dir,
    size = scroll_area_props_1.scrollAreaPropDefs.size.default, scrollbars = scroll_area_props_1.scrollAreaPropDefs.scrollbars.default, ...viewportProps } = props;
    return (React.createElement(radix_ui_1.ScrollArea.Root, { type: type, scrollHideDelay: scrollHideDelay, className: (0, classnames_1.default)('fui-ScrollAreaRoot', className), style: style },
        React.createElement(radix_ui_1.ScrollArea.Viewport, { ...viewportProps, className: "fui-ScrollAreaViewport" }),
        React.createElement("div", { className: "fui-ScrollAreaViewportFocusRing" }),
        scrollbars !== 'vertical' ? (React.createElement(radix_ui_1.ScrollArea.Scrollbar, { orientation: "horizontal", className: (0, classnames_1.default)('fui-ScrollAreaScrollbar', `fui-r-size-${size}`) },
            React.createElement(radix_ui_1.ScrollArea.Thumb, { className: "fui-ScrollAreaThumb" }))) : null,
        scrollbars !== 'horizontal' ? (React.createElement(radix_ui_1.ScrollArea.Scrollbar, { orientation: "vertical", className: (0, classnames_1.default)('fui-ScrollAreaScrollbar', `fui-r-size-${size}`) },
            React.createElement(radix_ui_1.ScrollArea.Thumb, { className: "fui-ScrollAreaThumb" }))) : null,
        scrollbars === 'both' ? React.createElement(radix_ui_1.ScrollArea.Corner, { className: "fui-ScrollAreaCorner" }) : null));
};
exports.ScrollArea = ScrollArea;
ScrollArea.displayName = 'ScrollArea';
//# sourceMappingURL=scroll-area.js.map