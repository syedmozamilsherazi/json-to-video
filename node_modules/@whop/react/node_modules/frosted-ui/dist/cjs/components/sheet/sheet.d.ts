import * as React from 'react';
import { Drawer as DrawerPrimitive } from 'vaul';
import { ExtractPropsForTag } from '../../helpers';
import { Heading } from '../heading';
import { Text } from '../text';
type SheetRootProps = Omit<React.ComponentProps<typeof DrawerPrimitive.Root>, 'direction' | 'shouldScaleBackground' | 'fadeFromIndex' | 'snapPoints' | 'activeSnapPoint'>;
declare const SheetRoot: {
    ({ ...props }: SheetRootProps): React.JSX.Element;
    displayName: string;
};
type SheetNestedRootProps = Omit<React.ComponentProps<typeof DrawerPrimitive.NestedRoot>, 'direction' | 'shouldScaleBackground' | 'fadeFromIndex' | 'snapPoints' | 'activeSnapPoint'>;
declare const SheetNestedRoot: {
    ({ ...props }: SheetNestedRootProps): React.JSX.Element;
    displayName: string;
};
interface SheetTriggerProps extends Omit<React.ComponentProps<typeof DrawerPrimitive.Trigger>, 'asChild'> {
}
declare const SheetTrigger: {
    (props: SheetTriggerProps): React.JSX.Element;
    displayName: string;
};
interface SheetCloseProps extends Omit<React.ComponentProps<typeof DrawerPrimitive.Close>, 'asChild'> {
}
declare const SheetClose: {
    (props: SheetCloseProps): React.JSX.Element;
    displayName: string;
};
interface SheetContentProps extends React.ComponentProps<typeof DrawerPrimitive.Content> {
}
declare const SheetContent: {
    ({ className, children, ...props }: SheetContentProps): React.JSX.Element;
    displayName: string;
};
type SheetHeaderProps = React.ComponentProps<'div'>;
declare const SheetHeader: {
    ({ children, className, ...props }: SheetHeaderProps): React.JSX.Element;
    displayName: string;
};
type SheetBodyProps = React.ComponentProps<'div'>;
declare const SheetBody: {
    ({ children, className, ...props }: SheetBodyProps): React.JSX.Element;
    displayName: string;
};
type SheetTitleProps = React.ComponentProps<typeof Heading>;
declare const SheetTitle: {
    ({ size, weight, ...props }: SheetTitleProps): React.JSX.Element;
    displayName: string;
};
type SheetDescriptionProps = ExtractPropsForTag<typeof Text, 'p'>;
declare const SheetDescription: {
    ({ size, weight, ...props }: SheetDescriptionProps): React.JSX.Element;
    displayName: string;
};
export { SheetBody as Body, SheetClose as Close, SheetContent as Content, SheetDescription as Description, SheetHeader as Header, SheetNestedRoot as NestedRoot, SheetRoot as Root, SheetTitle as Title, SheetTrigger as Trigger, };
export { SheetBodyProps as BodyProps, SheetCloseProps as CloseProps, SheetContentProps as ContentProps, SheetDescriptionProps as DescriptionProps, SheetHeaderProps as HeaderProps, SheetNestedRootProps as NestedRootProps, SheetRootProps as RootProps, SheetTitleProps as TitleProps, SheetTriggerProps as TriggerProps, };
