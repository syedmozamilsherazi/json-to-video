"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
const tslib_1 = require("tslib");
const icons_1 = require("@frosted-ui/icons");
const react_1 = tslib_1.__importDefault(require("react"));
const __1 = require("..");
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Controls/SegmentedControlRadioGroup',
    component: __1.SegmentedControlRadioGroup.Root,
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    render: (args) => (react_1.default.createElement(__1.SegmentedControlRadioGroup.Root, { defaultValue: "system", ...args, onValueChange: (value) => console.log('ðŸŸ¢ onValueChange ', value) },
        react_1.default.createElement(__1.SegmentedControlRadioGroup.Item, { value: "system" },
            react_1.default.createElement(icons_1.Monitor20, null)),
        react_1.default.createElement(__1.SegmentedControlRadioGroup.Item, { value: "light-mode" },
            react_1.default.createElement(icons_1.Sun20, null)),
        react_1.default.createElement(__1.SegmentedControlRadioGroup.Item, { value: "dark-mode" },
            react_1.default.createElement(icons_1.Moon20, null)))),
};
//# sourceMappingURL=segmented-control-radio-group.stories.js.map