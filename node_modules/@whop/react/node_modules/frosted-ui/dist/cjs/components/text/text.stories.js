"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HighContrast = exports.FormControls = exports.Formatting = exports.Trim = exports.Align = exports.Color = exports.Weight = exports.Size = exports.Default = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const __1 = require("..");
// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
    title: 'Typography/Text',
    component: __1.Text,
    parameters: {
        // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'centered',
    },
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
};
exports.default = meta;
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
exports.Default = {
    args: {
        children: 'The quick brown fox jumps over the lazy dog.',
        size: __1.textPropDefs.size.default,
    },
};
exports.Size = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12 } },
        react_1.default.createElement(__1.Text, { ...args, size: "0" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "1" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "2" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "3" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "4" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "5" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "6" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "7" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "8" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, size: "9" }, "The quick brown fox jumps over the lazy dog."))),
};
exports.Weight = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12 } },
        react_1.default.createElement(__1.Text, { ...args, weight: "light" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, weight: "regular" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, weight: "medium" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, weight: "semi-bold" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, weight: "bold" }, "The quick brown fox jumps over the lazy dog."))),
};
exports.Color = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12 } },
        react_1.default.createElement(__1.Text, { ...args, color: "indigo" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, color: "cyan" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, color: "orange" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, color: "crimson" }, "The quick brown fox jumps over the lazy dog."))),
};
exports.Align = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12, width: 500 } },
        react_1.default.createElement(__1.Text, { ...args, align: "left" }, "Left-aligned"),
        react_1.default.createElement(__1.Text, { ...args, align: "center" }, "Center-aligned"),
        react_1.default.createElement(__1.Text, { ...args, align: "right" }, "Right-aligned"))),
};
exports.Trim = {
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12 } },
        react_1.default.createElement(__1.Text, { ...args, trim: "normal", style: {
                background: 'var(--gray-a2)',
                borderTop: '1px dashed var(--gray-a7)',
                borderBottom: '1px dashed var(--gray-a7)',
            } }, "Without trim"),
        react_1.default.createElement(__1.Text, { ...args, trim: "both", style: {
                background: 'var(--gray-a2)',
                borderTop: '1px dashed var(--gray-a7)',
                borderBottom: '1px dashed var(--gray-a7)',
            } }, "With trim"))),
};
exports.Formatting = {
    render: (args) => (react_1.default.createElement(__1.Text, { size: "5", ...args },
        "Look, such a helpful ",
        react_1.default.createElement(__1.Link, { href: "#" }, "link"),
        ", an ",
        react_1.default.createElement(__1.Em, null, "italic emphasis"),
        ", a piece of computer",
        ' ',
        react_1.default.createElement(__1.Code, null, "code"),
        ", and even a hotkey combination ",
        react_1.default.createElement(__1.Kbd, null, "\u21E7\u2318A"),
        " within the text.")),
};
exports.FormControls = {
    name: 'With form controls',
    render: () => (react_1.default.createElement("div", { style: { maxWidth: 300 } },
        react_1.default.createElement(__1.Text, { size: "3", asChild: true },
            react_1.default.createElement("div", { style: { display: 'flex', gap: 12 } },
                react_1.default.createElement(__1.Checkbox, { defaultChecked: true }),
                " Composing Text with a form control like Checkbox, RadioGroup, or Switch automatically centers the control with the first line of text, even when the text is multi-line.")))),
};
exports.HighContrast = {
    name: 'High Contrast',
    render: (args) => (react_1.default.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: 12 } },
        react_1.default.createElement(__1.Text, { ...args, highContrast: true, color: "indigo" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, highContrast: true, color: "cyan" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, highContrast: true, color: "orange" }, "The quick brown fox jumps over the lazy dog."),
        react_1.default.createElement(__1.Text, { ...args, highContrast: true, color: "crimson" }, "The quick brown fox jumps over the lazy dog."))),
};
//# sourceMappingURL=text.stories.js.map