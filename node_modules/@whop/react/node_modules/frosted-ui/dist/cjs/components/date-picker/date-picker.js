"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePicker = DatePicker;
const tslib_1 = require("tslib");
const datepicker_1 = require("@react-aria/datepicker");
const datepicker_2 = require("@react-stately/datepicker");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const react_1 = tslib_1.__importStar(require("react"));
const __1 = require("../");
const icons_1 = require("../../icons");
const calendar_1 = require("../calendar");
const date_field_1 = require("../date-field");
const icon_button_1 = require("../icon-button");
const date_picker_props_1 = require("./date-picker.props");
function DatePicker(props) {
    const { className, color = date_picker_props_1.datePickerPropDefs.color.default, size = date_picker_props_1.datePickerPropDefs.size.default, ...datePickerProps } = props;
    const state = (0, datepicker_2.useDatePickerState)(datePickerProps);
    const ref = (0, react_1.useRef)(null);
    const { groupProps, fieldProps: { onChange, ...otherFieldProps }, buttonProps: { isDisabled: isButtonDisabled, onPress: onButtonClick, ...buttonProps }, calendarProps, } = (0, datepicker_1.useDatePicker)(props, state, ref);
    return (react_1.default.createElement("div", { ...groupProps, ref: ref, className: (0, classnames_1.default)('fui-DatePickerRoot', className) },
        react_1.default.createElement(date_field_1.DateField, { ...otherFieldProps, color: color, size: size, 
            // @ts-expect-error React Arias onChange type is incorrect - it's missing UNDEFINED
            onChange: onChange }),
        react_1.default.createElement(__1.Popover.Root, { open: state.isOpen, onOpenChange: (open) => state.setOpen(open) },
            react_1.default.createElement(__1.Popover.Trigger, { ...buttonProps, disabled: isButtonDisabled, 
                // @ts-expect-error fix mismatching onPress and onClick types
                onClick: onButtonClick, onKeyDown: (e) => {
                    // Radix and Aria keyboard event handlers are clashing
                    // when pressing space or enter on the button.
                    // Stop propagation to avoid that.
                    if (e.code === 'Space' || e.code === 'Enter') {
                        e.stopPropagation();
                    }
                } },
                react_1.default.createElement(icon_button_1.IconButton, { size: size },
                    react_1.default.createElement(icons_1.CalendarIcon, { size: size }))),
            react_1.default.createElement(__1.Popover.Content, { variant: "translucent", align: "center" },
                react_1.default.createElement(calendar_1.Calendar, { ...calendarProps })))));
}
//# sourceMappingURL=date-picker.js.map